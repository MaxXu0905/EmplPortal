$(function() {"use strict";	(function($, exports) { 	/**	 * created by Zhao Xin date: June 29th, 2014	 */	$LAB.script(root + "/plugin/jsviews.min.js")//	.script(root + "/plugin/posfixed.js")//	.script(root + "/plugin/jquery.isotope.js")//	.script(root + "/plugin/store+json2.min.js")//	.script(root + "/plugin/spin.min.js")//	.script(root + "/plugin/j-ui/jquery-ui-custom.min.js")//	.script(root + "/plugin/bootstrapx-popoverx.js")//	.script(root + "/plugin/Highcharts-3.0.9/js/highcharts.js")//	.wait(			function() {								RenderUtils.init();								/** === 模型数据 =========================================== */				function getCampusName(){					var currT = new Date();					if(REAL_TIME){						currT.setTime(REAL_TIME);					}					var name = [];					name.push(currT.getFullYear() + '年');					var month = currT.getMonth()+1;					if(month<7){						name.push('春季');					}else{						name.push('秋季');					}					name.push('校招测评');					return name.join('');				}								/** 校招测评模型 */				var TestData = {					weixinCompany: 0, // 1：企业微信号 0：百一微信号					notifyScore: 1, // 知晓分数					activityList: [], // 宣讲会					positionName: getCampusName(),					paperId : null, // 选择试卷					configInfo:[] // 了解信息				};				/** 试卷列表 */				var Paper = {					papers : [], // 试卷列表					_loading : false, // 正在加载列表					_focusIndex : null, // 正在focus的试卷					_selectedIndex : null, // 选择的试卷					_newPaperId: null // 刚创建的试卷ID				};				/** 信息设置 */				var ConfigInfo = {					mandatories: [], // 必选的					choosedInfos : [],					unchoosedInfos : [],					_loading : false, // 正在加载列表					_result : true				// 是否成功获取列表				};								/** 模式（创建，编辑） */				var Mode = Klass.create();				Mode.include({					positionId: POSITION_ID,					mode: 0, // 0 创建 1 编辑					editable: true, // 发过邀请后，某些字段不可编辑					data: null, // 原始数据					init: function(){						if(this.positionId){							document.title = '编辑测评' + project_title;							this.mode = 1;							this.getPostInfo();						}					},					frozen: function(){						return this.mode && !this.editable;					},					getPostInfo: function(){						var that = this;						var success = false;						Server.queryCampus({							async: false,							beforeSend: function(){								RenderUtils.modalWaiting.showSpin().show('正在加载测评信息...');							},							success: function(data){								if(data.code == 0 && data.data){									success = true;									that.data = data.data;									that.editable = data.data.editable?true:false;									Mode.renderTitle(that);																		// 填充TestData									TestData.positionId = data.data.positionId;									TestData.positionName = data.data.positionName;									TestData.paperId = data.data.paperId;									TestData.weixinCompany = data.data.weixinCompany;									TestData.notifyScore = data.data.notifyScore;								}							},							complete: function(){								if(success){									RenderUtils.modalWaiting.hide();								}else{									RenderUtils.modalWaiting.title(											'加载测评信息失败了，请<a class="trigger text-highlight">再试一次</a>，或告诉我们：<br/>'													+ RenderUtils.connectInfo).hideSpin().oneEvent(function() {										that.getPostInfo();									});								}							}						}, {							positionId: this.positionId						});					}				});				Mode.extend({					renderTitle: function(mode){						$('#titleMain').html($.templates('#tmpl_titleMain').render(mode));					},					extended: function(){						Mode.helpers();					},					helpers: function(){					}				});				var mode = Mode.inst();												/** === end 模型数据 ======================================= */								/** ====视图帮助补充======== */				RenderUtils.extend({					extended: function(){						RenderUtils.myHelpers();						RenderUtils.myConverters();					},					myHelpers : function() {						var that = this;						$.views.helpers({							propFrozen : function() {								return mode.frozen();							},							paperItemVisible: function(index, selectedIndex){								if(mode.frozen() && (index != selectedIndex)){									return false;								}								return true;							},							weixinCompanyRadioVisible: function(value, RadioValue){								if(mode.frozen() && value != RadioValue){									return false;								}								return true;							}						});					},					myConverters: function(){						$.views.converters('signal', function(val) {							val = Math.abs(val*1);							if(isNaN(val)){								return '';							}							if(val < 90){								return '<span class="text-success">佳</span>';							}else if(val < 100){								return '<span class="text-info">中</span>';							}else{								return '<span class="text-danger">差</span>';							}						});					}				});				/** ====end 视图帮助补充======== *///				var $modal = $('#modal_splash');//				$modal.find('.modal-body').load(root + '/sets/page/campusguide101/905');//				$modal.modal({//					backdrop: 'static'//				});//				return;								if(!mode.mode){					LocalUtils.init(EMPLOYER_ID, function(){						var visited = LocalUtils.getPrivate(LocalUtils.meta.HVCC);						if(!visited){ // 第一次							LocalUtils.setPrivate(LocalUtils.meta.HVCC, true);							showSplash();						}					});				}				// 显示引导				function showSplash(){					var $modal = $('#modal_splash');					$modal.modal({						backdrop: 'static'					});					$modal.find('.modal-body').load(root + '/sets/page/campussplash');				}												/** 测评步骤第一步：添加宣讲会 */				var TestStep1 = Controller.create({					records: {					},					attr:{						_flashInstalled: RenderUtils.flashChecker(), // 是否安装flash						_importAlert: null,						_college: null,// 大学						_collegeHintLoading: false, // 加载大学提示列表						_collegeHintList: [], // 学校提示列表						_city: null,// 城市						_address: null,// 地址						_seatNumber: null,// 座位数						_signalStrength: null,// 信号强度						_signalLoading: false, // 加载信号强度						_addressList: [], // [{"address":"第一教室","signalStrength":-90},{"address":"第二教室","signalStrength":-80}],											// // 地址建议列表						_activityDate: null,// 日期						_beginTime: null,// 开始时间						_endTime: null,// 结束时间						_activityMode: 1, // 宣讲会模式 1：添加 2：编辑						_activityId: null, // 编辑回显的宣讲会id						_selectedId: null, // 编辑宣讲会的id						_addActivityBtnAvailable: false, // 添加按钮						_activityCheckInfo: null,						bcEvent: 'next.before.click', // 点击下一步前触发的事件						nextStepAvailable : false,						firstStep : true // 当前步骤为第一步					},					tmpls : {						'#tmpl_positionName' : '$$positionName',						'#tmpl_step1_weixinMain' : '$$weixinMain',						'#tmpl_step1_flash_alert' : '$$flashAlert',						'#tmpl_step1_import_alert' : '$$importAlert',						'#tmpl_activity_add' : '$$addActivity', // 添加(编辑)宣讲会						'#tmpl_activity_item':'$$activityItem', // 展示宣讲会						'#tmpl_step_nextMain' : '$$nextMain'					},					elements : {						'.position-name' : '$positionName',						'dl.weixin-main' : '$weixinMain',						'.flash-uninstall-alert' : '$flashAlert',						'#importActivityBtn' : '$btnImportActivity', // 导入宣讲会						'.activity-import-alert' : '$importAlert',						'.add-activity-main' : '$addActivity', 						'.activity-list':'$activityList',						'.activity-info':'$activityInfo',						'.next-step' : '$nextMain'					},					lazyElements : {						'$collegeInput':'input[data-link="_college"]',						'$collegeHint':'.auto-hint-college',						'$activityDateInput': '[data-link="_activityDate"]', // 日期						'$beginTimeInput': '[data-link="_beginTime"]', // 开始时间-						'$endTimeInput': '[data-link="_endTime"]', // 结束时间						'$addActivityBtn': '.btn-add-activity', // 添加宣讲会按钮						'$nextBtn': '.btn-next-step' // 下一步按钮					},					events : {						 'click,.notify-score,':'selectNofityScore', // 是否通知学生成绩						 'click,.btn-import-activity,':'importActivity', // 导入宣讲会						 'click,.address-item,':'selectAddress', // 选中提示地址						 'keyup,.add-activity .a-val.seatNumber,.add-activity-main':'keySeat',						 'blur,.add-activity .a-val.seatNumber,.add-activity-main':'keySeat',						 'click,.btn-add-activity,.add-activity-main':'addActivity', // 添加宣讲会						 'click,.btn-edit-activity,.activity-list':'editActivity', // 编辑宣讲会						 'click,.btn-remove-activity,.activity-list':'removeActivity' // 删除宣讲会					},					init : function() {						/** 初始化报告列表区域 */						this.$activityList.isotope({							itemSelector : '.activity-item',							columnWidth : 1,							getSortData: {								sortFlag: function($elem){									return $elem.data('activity').sortFlag;								}							}						});						/** 是否安装flash */						this.link();						this.bindEvent();						this.addObserver();						this.hasActivity();												this.renderActivities();					},					link : function() {						var that = this;						/** 测评名称 */						this.$$positionName.link(this.$positionName.selector, TestData);						/** 微信相关 */						this.$$weixinMain.link(this.$weixinMain.selector, TestData);						/** flash */						this.$$flashAlert.link(this.$flashAlert.selector, this.attr);						/** 导入失败提示 */						this.$$importAlert.link(this.$importAlert.selector, this.attr);						/** 添加宣讲会 */						this.$$addActivity.link(this.$addActivity.selector, this.attr);						this.setupElements(['$collegeInput', '$collegeHint', '$activityDateInput', '$beginTimeInput', '$endTimeInput', '$addActivityBtn'], this.$addActivity);						/** 下一步 */						this.$$nextMain.link(this.$nextMain.selector, this.attr);						this.setupElements(['$nextBtn'], this.$nextMain);					},					bindEvent : function() {												var that = this;						/** 固定添加宣讲会区域 */						this.$addActivity.posfixed({							initPos: 172,							distance : 20,							pos : 'top',							type : 'while',							hide : false						});						/** 学校自动补全 */						RenderUtils.plugins.autoComplete(this.$collegeInput, this.$collegeHint, 'getCollegeHintList', {							beforeSend: function(){								$.observable(that.attr._collegeHintList).refresh([]);								$.observable(that.attr).setProperty('_collegeHintLoading', true);							},							success: function(data){								if(data.code == 0){									$.observable(that.attr._collegeHintList).refresh(data.data || []);								}							},							complete: function(success){								$.observable(that.attr).setProperty('_collegeHintLoading', false);							},							selected: function(index, data){								$.observable(that.attr).setProperty('_college', data.value);								$.observable(that.attr).setProperty('_city', data.key);								$.observable(that.attr._collegeHintList).refresh([]);							}						});						/** 日期 */						this.$activityDateInput.datepicker({							format: 'yyyy-mm-dd',							autoclose: true,							startDate: '0d',							language: 'zh-CN'						});						RenderUtils.plugins.timePicker(this.$beginTimeInput, {							min : '00'						});						RenderUtils.plugins.timePicker(this.$endTimeInput, {							min : '00'						});						this.$beginTimeInput.on('timepicker.hide', function(e){							$.observable(that.attr).setProperty('_beginTime', $(e.target).val());						});						this.$endTimeInput.on('timepicker.hide', function(e){							$.observable(that.attr).setProperty('_endTime', $(e.target).val());						});												this.$nextBtn.bind(this.attr.bcEvent, function(){							that.setActivityList();						});												this.bindImportAcitcity();											},					bindImportAcitcity: function(){						/** 导入宣讲会 */						var that = this;						var importResult = false;						var cause = [];						this.$btnImportActivity.uploadify({							'height' : 30,							'width' : 107,							'multi' : false,							'swf' : root + '/plugin/uploadify/uploadify.swf',							'cancelImg' : root + '/plugin/uploadify/uploadify-cancel.png',							'uploader' : root + '/sets/position/loadTalks;jsessionid=' + JESEESION_ID,							'buttonText' : '导入宣讲会',							'auto' : true,							'fileDesc' : '请选择Excel文件',							'fileTypeExts' : '*.xls',							'onUploadStart' : function(file) {								cause.length = 0;								$.observable(that.attr).setProperty('_importAlert', null);							},							'onUploadError' : function(file, errorCode, errorMsg, errorString) {							},							'onUploadSuccess' : function(file, data, response) {								data = JSON.parse(data);								if (data.code ==0 && data.data.errorCode == 0){									if(data.data.success){										importResult = true;										var as = data.data.results;										for ( var i = 0; i < as.length; i++) {											var a = as[i];											that.attr._college = a.school;											that.attr._city = a.city;											that.attr._address = a.address;											that.attr._seatNumber = a.seats || 0;											that.attr._activityDate = a.date;											that.attr._beginTime = a.beginTime;											that.attr._endTime = a.endTime;											that.attr.sortFlag = a.date + a.beginTime;											that.addActivity();										}									}else{										var as = data.data.results;										for ( var i = 0; i < as.length; i++) {											var a = as[i];											if(a.errorType != 0){												cause.push('第' + (a.rowNum+1) + '行:' + a.cause);											}										}									}								}							},							'onUploadComplete' : function() {								$('.uploadify-queue-item').remove();								if(!importResult){									if(cause.length){										$.observable(that.attr).setProperty('_importAlert', cause.join('<br/>'));									}else{										$.observable(that.attr).setProperty('_importAlert', '导入宣讲会失败，请告诉我们<br/>' + RenderUtils.connectInfo);									}								}							}						});					},					addObserver: function(){						var that = this;						$.observe(this.attr, '_college', '_city', function(ev, eventArgs) {							if(that.attr._college && that.attr._city){								that.getCampusSignalList();							}						});						$.observe(this.attr, '_activityMode', function(ev, eventArgs) {							that.checkNextStepAvailable();						});						$.observable(this.attr).observeAll(function(){							that.checkAddActivityAvailable();						});						$.observable(TestData).observeAll(function(ev, eventArgs) {							that.checkNextStepAvailable();						});					},					checkNextStepAvailable: function(){						if(!TestData.positionName){ // 没有测评名称不允许下一步							$.observable(this.attr).setProperty('nextStepAvailable', false);							return false;						}												if(this.attr._activityMode == 2) {// 编辑状态不允许下一步							$.observable(this.attr).setProperty('nextStepAvailable', false);							return false;						}												if(!this.hasActivity(true)){ // 如果没有宣讲会，不允许添加下一步							$.observable(this.attr).setProperty('nextStepAvailable', false);							return false;						}												$.observable(this.attr).setProperty('nextStepAvailable', true);						return true;					},					checkAddActivityAvailable: function(){						var that = this;						var attr = this.attr;						if(attr._college && attr._city && attr._address && attr._activityDate && attr._beginTime && attr._endTime){							$.observable(this.attr).setProperty('_addActivityBtnAvailable', true);						}else{							$.observable(this.attr).setProperty('_addActivityBtnAvailable', false);						}					},					getCampusSignalList: function(){						var that = this;						Server.getCampusSignalList({							data:JSON.stringify({								college: that.attr._college,								city: that.attr._city							}),							contentType : 'application/json',							beforeSend: function(){								$.observable(that.attr).setProperty('_signalLoading', true);							},							success: function(data){								if(data.code == 0){									$.observable(that.attr._addressList).refresh(data.data || []);								}							},							complete: function(){								$.observable(that.attr).setProperty('_signalLoading', false);							}						});					},					keySeat: function(e){						var $ele = $(e.target);						var val = $.trim($ele.val());						if(val && !/^\d+$/.test(val)){							$ele.val(0);						}else{							$ele.val(val*1);						}						$.observable(this.attr).setProperty('_seatNumber', val?val*1:0);					},					selectNofityScore: function(e){						$.observable(TestData).setProperty('notifyScore', TestData.notifyScore?0:1);					},					selectAddress: function(e){						var $item = $(e.target);						$.observable(this.attr).setProperty('_address', $item.data('address'));						$.observable(this.attr).setProperty('_seatNumber', $item.data('seat'));					},					setActivityList: function(){						TestData.activityList.length = 0;						$.each(this.$activityList.find('>.activity-item'), function(){							var data = {};							$.extend(data, $(this).data('activity'));							delete data.id;							delete data.sortFlag;							delete data.activityMode;							TestData.activityList.push(data);						});						return false;					},					hasActivity: function(noRender){ // noRender:						var count = this.$activityList.find('>.activity-item').length;						if(!noRender){							if(count){								this.$activityInfo.html('<div class="text-right p15">已添加了<span class="text-info">' + count + '</span>个宣讲会</div>');							}else{								this.$activityInfo.html('<div class="alert alert-danger mb0 br0" style="border: none;"><i class="fa fa-meh-o"></i> 您还没有添加宣讲会，请在右侧的表单中添加一个吧</div>');							}						}						return count;					},					validateTimeline: function(activityData){ // 						// 如果起止时间点处于某一个宣讲会的时间段内，则时间设置不合理						var date = activityData.activityDate;						var checkTime1 = date + activityData.beginTime;						var checkTime2 = date + activityData.endTime;						if(checkTime1>=checkTime2){							return {								valid: false,								info: '开始时间不能晚于结束时间'							};						}						// 不做时间段冲突的校验						return {							valid: true,							info: ''						};						// 时间冲突校验						var valid = true;						var conflictIndex = -1;						$.each(this.$activityList.find('>.activity-item:not(.activity-item-edit)'), function(index){							var data = $(this).data('activity');							var preData = data.activityDate;							var beginTime = preData + data.beginTime;							var endTime = preData + data.endTime;							var vali0 = (checkTime1 < beginTime) && (checkTime2 > beginTime);							var vali1 = (beginTime <= checkTime1) && (checkTime1 <= endTime);							var vali2 = (beginTime <= checkTime2) && (checkTime2 <= endTime);							if(vali0 || vali1 || vali2){								valid = false;								conflictIndex = index;								return false;							}						});						return {							valid: valid,							info: valid?'':'您填写的时间与已添加的宣讲会的时间冲突了',							conflictIndex: conflictIndex						};					},					renderActivities: function(){						if(!mode.mode){							return;						}						var list = mode.data.activityList || [];						this.$addActivityBtn.removeAttr('disabled');						for ( var i = 0; i < list.length; i++) {							var data = list[i];							this.attr._college = data.college;							this.attr._city = data.city;							this.attr._address = data.address;							this.attr._seatNumber = data.seatNumber;							this.attr._activityDate = data.activityDate;							this.attr._beginTime = data.beginTime;							this.attr._endTime = data.endTime;							this.$addActivityBtn.trigger('click', [data.activityId, data.testState]);						}						this.$addActivityBtn.attr('disabled', 'disabled');						var that = this;						setTimeout(function() {							that.$activityList.isotope('reLayout');						}, 50);					},					/**					 * activityId: 当编辑回显时，返回宣讲会对象的activityId					 * testState: 当编辑回显时，返回宣讲会对象的状态，用于判断是否可以修改 >0 不可修改					 */					addActivity: function(e, activityId, testState){						// 这里使用isotope组件提供的排序,当顺序放生变化的时候，jsviews保存的数组数据并不会变化						// 导致数据数组映射不一致，所以不使用jsviews的数组监控						var activityData = {							college: this.attr._college,							city: this.attr._city,							address: this.attr._address,							seatNumber: this.attr._seatNumber || 0,							activityDate: this.attr._activityDate,							beginTime: this.attr._beginTime,							endTime: this.attr._endTime,							sortFlag: this.attr._activityDate + this.attr._beginTime, // 排序依据							activityId: activityId || null,							testState: testState || 0						}						if(this.attr._activityMode == 2){ // 编辑							activityData.activityId = this.attr._activityId;							this.attr._activityId = null;						}												var validInfo = this.validateTimeline(activityData); // 校验时间合法性						if(!validInfo.valid){							$.observable(this.attr).setProperty('_activityCheckInfo', validInfo.info);							return;						}						var that = this;						var html = this.$$activityItem.render(activityData); // 获取展现模板						if(this.attr._activityMode == 1){							activityData.id = Math.guid(); // 生成id						}else{							activityData.id = this.attr._selectedId;						}						var $item = $($.parseHTML(html)[1]).data('activity', activityData);						if(this.attr._activityMode == 2){ // 如果是编辑模式，先删除，再添加							this.$activityList							.isotope('remove', this.findActivityById(activityData.id), function(){								that.hasActivity();							});						}						this.addActivityItem($item);						if(this.attr._activityMode == 1){							this.hasActivity();						}						this.resetActivity({							activityCheckInfo: validInfo.info						});						this.checkNextStepAvailable();					},					addActivityItem: function($item){						this.$activityList.append($item).isotope('appended', $item).isotope({							sortBy: 'sortFlag'						});					},					findActivityById: function(id){						var $ele;						$.each(this.$activityList.find('>.activity-item'), function(){							if($(this).data('activity').id == id){								$ele = $(this);								return false;							}						});						return $ele;					},					editActivity: function(e){ // 点击编辑按钮时，将数据回显到表单处						// 2.高亮当前宣讲会为编辑状态						this.$activityList.find('>.activity-item').removeClass('activity-item-edit');						var $ele = $(e.target).closest('.activity-item').addClass('activity-item-edit');						// 3.回显编辑数据到表单						var data = $ele.data('activity');						data.activityMode = 2;						this.resetActivity(data);					},					removeActivity: function(e){						var that = this;						var $item = $(e.target).closest('.activity-item');						if(this.attr._activityMode == 2 && this.attr._selectedId == $item.data('activity').id){							this.resetActivity();						}												$.observable(this.attr).setProperty('nextStepAvailable', false);						this.$activityList.isotope('remove', $item, function(){							that.hasActivity();							that.checkNextStepAvailable();						});					},					resetActivity: function(data){						data = data || {};						$.observable(this.attr).setProperty({							_college: data.college || null,							_collegeHintList: [],							_city: data.city || null,							_address: data.address || null,							_seatNumber: data.seatNumber || null,							_signalStrength: data.signalStrength || null,							_addressList: [],							_activityDate: data.activityDate || null,							_beginTime: data.beginTime || null,							_endTime: data.endTime || null,							_activityMode: data.activityMode || 1,							_activityId : data.activityId || null,							_addActivityBtnAvailable: false,							_activityCheckInfo: data.activityCheckInfo,							_selectedId: data.id || null						});					},					importActivity: function(){					}				});								/** 测评步骤第二步 */				var TestStep2 = Controller.create({					records : { // 保存数据对象的对象					},					attr : { // 流程控制需要的辅助属性						request4GetPapers : null,						nextStepAvailable : false					// 					},					tmpls : {						'#tmpl_paper' : '$$paperMain',						'#tmpl_step_nextMain' : '$$nextMain'					},					elements : {						'.paper-main' : '$paperMain',						'.next-step' : '$nextMain'					},					lazyElements : {					},					events : {						'click,.btn-paper-create,.paper-main':'createPaper', // 创建试卷						'click,.btn-paper-import,.paper-main':'importPaper', // 导入试卷						'click,.btn-papers-refresh,.paper-main' : 'getPapers', // 刷新试卷列表						'mouseenter,>.paper-item,.paper-main' : 'focusPaper', // hover试卷						'mouseleave,>.paper-item,.paper-main' : 'blurPaper', // hoverout试卷						'click,>.paper-item,.paper-main' : 'selectPaper' // 选择试卷					},					init : function() {						this.link();						this.initData();						this.addObservers();					},					addObservers : function() {						var that = this;						$.observe(TestData, 'paperId', function(ev, eventArgs) {							that.checkNextStepAvailable();						});					},					checkNextStepAvailable : function() {						if(TestData.paperId){							$.observable(this.attr).setProperty('nextStepAvailable', true);						}else{							$.observable(this.attr).setProperty('nextStepAvailable', false);						}					},					createPaper: function(){						window.open(root + '/sets/page/createcampuspaper/' + encodeURIComponent(encodeURIComponent(TestData.positionName)) + '.html', '_blank');					},					importPaper: function(){						window.open(root + '/sets/page/importPaper/2/99/1/' + encodeURIComponent(encodeURIComponent(TestData.positionName)) + '/', '_blank');					},					getPapers : function(paperId) {						var pId = paperId || TestData.paperId;						var that = this;						var success = false;						Server.getPapers({							beforeSend : function() {								$.observable(Paper).setProperty('_loading', true);							},							success : function(data) {								if (data.code == 0 && data.data) {									success = true;									$.observable(Paper).setProperty({										'papers' : data.data,										'_loading' : false									});									if(pId){										for ( var i = 0; i < data.data.length; i++) {											var pData = data.data[i];											if(pData.paperId == pId){												$.observable(Paper).setProperty('_selectedIndex', i);												$.observable(TestData).setProperty('paperId', pId);												that.checkNextStepAvailable();											}										}									}									$.observable(Paper).setProperty('_newPaperId', paperId);								}							},							complete : function() {								if (!success) {									$.observable(Paper).setProperty({										'papers' : [],										'_loading' : false									});								}							}						}, {							seriesId : 0,							level : 0,							testType: 2						});					},					initData : function() {						this.getPapers();					},					link : function() {						var that = this;						/** 试卷选择 */						this.$$paperMain.link(this.$paperMain.selector, Paper);						/** 下一步 */						this.$$nextMain.link(this.$nextMain.selector, this.attr);					},					focusPaper : function(e) {						var index = $(e.target).data('index');						if (isNaN(index)) {							index = $(e.target).closest('paper-item').data('index');						}						$.observable(Paper).setProperty('_focusIndex', index);					},					blurPaper : function(e) {						var index = $(e.target).data('index');						if (isNaN(index)) {							index = $(e.target).closest('.paper-item').data('index');						}						$.observable(Paper).setProperty('_focusIndex', null);					},					selectPaper : function(e) {						var $target = $(e.target);						var index = $(e.target).data('index');						if (isNaN(index)) {							$target = $(e.target).closest('.paper-item');							index = $target.data('index');						}						if (index != Paper._selectedIndex) {							var paperId = $target.data('paperid');							$.observable(Paper).setProperty('_selectedIndex', index);							$.observable(TestData).setProperty('paperId', paperId);						}					}				});				/** 测评步骤第三步 */				var TestStep3 = Controller.create({					records : { // 保存数据对象的对象						infos : []					},					attr : { // 流程控制需要的辅助属性						nextStepAvailable : false, // 下一步按钮是否可用						nextStepContent : mode.mode?'完成编辑':'创建测评', // 下一步按钮显示						finalStep: true, // 当前步骤为最后一步						alert: ''					},					tmpls : {						'#tmpl_configInfo' : '$$configInfo', // 						'#tmpl_step_nextMain' : '$$nextMain'					},					elements : {						'.config-info-main' : '$configInfo', // 						'.next-step' : '$nextMain'					},					lazyElements : {						'$choosedInfos' : '.choosed-infos', // 已选区域						'$unchoosedInfos' : '.unchoosed-infos' // 备选区域					},					events : {						'click,.btn-infos-refresh,' : 'getInfos', // 获取信息标签						/** 以“_”开头的方法使用的上下文为触发对象自身 */						'click,.info-tag-choosed,.config-info-main' : '_unchooseInfo', // 反选						'click,.info-tag-unchoosed,.config-info-main' : '_chooseInfo', // 选择						'click,>.btn-final-step,.next-step' : 'createCampus' // 创建测评					},					init : function() {						this.link();						this.initData();						this.addObservers();						this.bindEvent();					},					addObservers : function() {						var that = this;					},					bindEvent : function() {						var that = this;						this.$choosedInfos.sortable({							items : '.info-tag-choosed',							placeholder : 'info-placeholder',							distance : 10,							opacity : 0.8,							revert : 100,							update : function(event, ui) {								that.refreshChooseInfo();							}						});						this.$choosedInfos.disableSelection();					},					checkNextStepAvailable : function() {						/** 当成果获取到信息列表时，激活下一步按钮 */						$.observable(this.attr).setProperty('nextStepAvailable', true);					},					initData : function() {						this.getInfos();					},					dealInfoTag: function(tags){						for ( var i = 0; i < tags.length; i++) {							var infoData = tags[i];							if (infoData.isMandatory) {								$.observable(ConfigInfo.mandatories).insert(infoData);							}else if (infoData.choosed) {								$.observable(ConfigInfo.choosedInfos).insert(infoData);							} else {								$.observable(ConfigInfo.unchoosedInfos).insert(infoData);							}						}					},					getInfos : function() {						if(mode.mode){							this.dealInfoTag(mode.data.infoExt);							this.checkNextStepAvailable();							return;						}												var that = this;						var success = false;						Server.getInfos({							beforeSend : function() {								$.observable(ConfigInfo).setProperty('_loading', true);							},							success : function(data) {								if (data.code == 0 && data.data) {									success = true;									that.dealInfoTag(data.data);									$.observable(ConfigInfo).setProperty({										'_loading' : false,										'_result' : true,									});								}							},							complete : function() {								if (!success) {									$.observable(ConfigInfo).setProperty({										'_loading' : false,										'_result' : false									});								} else {									that.checkNextStepAvailable();								}							}						});					},					link : function() {						var that = this;						/** 信息配置 */						this.$$configInfo.link(this.$configInfo.selector, ConfigInfo);						this.setupElements([ '$choosedInfos', '$unchoosedInfos' ]);						/** 完成 */						this.$$nextMain.link(this.$nextMain.selector, this.attr);					},					refreshChooseInfo : function() {						var choosedInfos = [];						var configInfo = [];						this.$choosedInfos.find('>.info-tag-choosed').each(function(index) {							var $this = $(this);							var infoId = $this.data('infoid');							choosedInfos.push({								infoId : infoId,								choosed : true,								infoName : $.trim($this.text())							});							configInfo.push({								infoId : infoId							});						});						$.observable(ConfigInfo.choosedInfos).refresh(choosedInfos);						TestData.configInfo = configInfo;					},					_unchooseInfo : function(e) {						var view = $.view(this);						var index = view.index;						var data = view.data;						data.choosed = false;						$.observable(ConfigInfo.choosedInfos).remove(index);						$.observable(ConfigInfo.unchoosedInfos).insert(data);					},					_chooseInfo : function(e) {						var view = $.view(this);						var index = view.index;						var data = view.data;						data.choosed = true;						$.observable(ConfigInfo.unchoosedInfos).remove(index);						$.observable(ConfigInfo.choosedInfos).insert(data);					},					createCampus: function(){						var that = this;						this.refreshChooseInfo();						var success = false;						var desc = mode.mode?'编辑':'创建';						Server.createCampus({							data : JSON.stringify({								positionId: TestData.positionId || null,								positionName: TestData.positionName,								weixinCompany: TestData.weixinCompany,								weixinMode: TestData.weixinMode,								notifyScore: TestData.notifyScore,								paperId: TestData.paperId,								activityList: TestData.activityList,								configInfo: TestData.configInfo							}),							contentType : 'application/json',							beforeSend : function() {								RenderUtils.modalWaiting.show('正在'+desc+'测评...');								$.observable(that.attr).setProperty('alert', '');							},							success : function(data) {								if(data.code == 0){									success = true;									TestData.positionId = data.data.positionId;								}							},							error : function() {							},							complete : function() {								if(success){									if(mode.mode){ // 编辑										RenderUtils.modalWaiting.show('测评'+desc+'成功');										setTimeout(function() {											RenderUtils.modalWaiting.hide();											window.location.replace(root + '/sets/page/reportlist/' + TestData.positionId + '.html');										}, 2000);										return;									} // 创建									RenderUtils.modalWaiting.hide(function(){										var $modal = $('#modal_guide');										$modal.find('.modal-footer button').bind('click', function(){											window.location.replace(root + '/sets/page/reportlist/' + TestData.positionId + '.html');										});										$modal.modal({											backdrop: 'static'										});										// 根据选择的公众号类型显示不同的引导 1：企业微信号  0：百一微信号										TestData.weixinCompany = TestData.weixinCompany * 1;										if(TestData.weixinCompany) { // 企业微信号											$modal.find('.modal-body').load(root + '/sets/page/campusguideself/' + TestData.positionId);										}else{ // 百一微信号											$modal.find('.modal-body').load(root + '/sets/page/campusguide101/' + TestData.positionId);										}									});																	}else{									RenderUtils.modalWaiting.hide();									$.observable(that.attr).setProperty('alert', '测评'+desc+'失败了，请再试一下，或者告诉测评君<br/>' + RenderUtils.connectInfo);								}							}						});					}				});				new TestStep1({					el : $("#step1")				});				exports.PAPERCHOSER = new TestStep2({					el : $("#step2")				});				new TestStep3({					el : $("#step3")				});//				RenderUtils.plugins.shimPlaceholder();				/**				 * 步骤管理				 * <p>				 * 1.每个步骤内置“上一步”“下一步”元素，控制是否可用				 * <p>				 * 2.管理器负责步骤元素的事件处理。				 */				var StepManager = Controller.create({					records : {},					attr : {},					getIndex : function(str) {						return /^step(\d)$/.exec(str)[1] * 1;					},					init : function() {						var that = this;						$.each(this.el.find('li[id^=step]'), function() {							var $step = $(this);							that.bindEvents($step);						});					},					bindEvents : function($step) {						var that = this;						var index = this.getIndex($step.attr('id'));						var $preBtn = $step.find('.btn-pre-step');						var $nextBtn = $step.find('.btn-next-step');						if ($preBtn.length) {							var preSelector = $('#step' + (index - 1));							$preBtn.bind('click', function() {								$(preSelector).show();								$step.hide();							});						}						if ($nextBtn.length) {							var nextSelector = $('#step' + (index + 1));							$nextBtn.bind('click', function() {								var beforeClickEvent = $nextBtn.data('bcevent');								if(beforeClickEvent){									$nextBtn.trigger(beforeClickEvent);								}								$(nextSelector).show();								$step.hide();							});						}						if (index == 1) {							$step.show();						}					}				});				new StepManager({					el : $(".step_list")				});				return;			});	})(jQuery, window);});