$(function($) {	"use strict";	// 作为邮件外部引用，使用basePath	var titleIndex = 1;	var result = "";	var inter = "未打分";	if (show_sample) {		if (show_sample != true)			$('#registerBanner').show();	}	var scoreHighchars = {		/*		 * init :function(){ },		 */myreload : function(div, relname, score) {			$('#' + div + '').remove();			var anchorsDatas = result.overallItems;			var rel_score = Math.round(score);			// Create the chart			var $scorediv = $('<div class="pie-div score-pie-' + rel_score					+ '" id=' + div + '>');			$('#score_content').append($scorediv);			var rel_name = "";			if (relname) {				$scorediv.append('<div class="name-anchors">' + relname						+ '</div>');			}			if (score || anchorsDatas[o].score == 0) {				$scorediv.append('<div class="score-anchors">' + score						+ '</div>');			} else {				$scorediv						.append('<div class="score-anchors" style="font-size:20px;color:#428bca"><i class="fa fa-pencil"></i></div>');			}		}	}	var meta = {			defaultPortrait : '/core/images/portrait_default.png', // 默认的照片			levels : [ '较差', '一般', '良好', '优秀' ],			max : 10, // 最大值			colors : [ '#dd5a43', '#69aa46', '#66CCFF',					'#ff892a', '#a069c3', '#d6487e', '#16a085',					'#34495e', '#95a5a6', '#2980b9', '#27ae60' ],			modemapping : {				java : {					mode : 'text/x-java',					path : 'clike'				},				javascript : {					mode : 'text/javascript',					path : 'javascript'				},				sql : {					mode : 'text/x-sql',					path : 'sql'				},				shell : {					mode : 'shell',					path : 'shell'				},				html : {					mode : 'htmlmixed',					path : 'htmlmixed'				},				'c++' : {					mode : 'text/x-c++src',					path : 'clike'				},				c : {					mode : 'text/x-csrc',					path : 'clike'				}			}		};	$LAB			.script(basePath + "/plugin/flowplayer/flowplayer-3.2.13.min.js")			.script(basePath + "/plugin/j-ui/jquery-ui-custom.min.js")			.script(basePath + "/plugin/Highcharts-3.0.9/js/highcharts.js")			.script(basePath + "/plugin/spin.min.js")			.script(basePath + "/plugin/store+json2.min.js")			/* .script(basePath + "/plugin/imagesloaded.pkgd.min.js") */			// 加载图片			.script(basePath + "/plugin/codemirror-3.21/lib/codemirror.js")			.wait()			//			.script(basePath + "/plugin/codemirror-3.21/addon/mode/loadmode.js")			// 动态切换模式			.wait(					function() {//						/** 滚动时表头显示阴影 */						var isShow = false;						var $header = $('.header-back');						$(window).bind('scroll', function() {							if ($(window).scrollTop() > 0) {								if (!isShow) {									isShow = true;									// show									$header.addClass('show-shadow');								}							} else {								isShow = false;								$header.removeClass('show-shadow');								// hide							}						});						var vali = {							vali_time : '.vali_time',							vali_time_pattern : /^([1-9][0-9]*)?$/,							init : function() {								var _this = this;								/** 时间校验 */								$(document).on(										'keyup blur',										this.vali_time,										function() {											if (!_this.vali_time_pattern													.test($(this).val())) {												$(this).val('');											}										});								/** 非空校验 */							},							valiTime : function(val) {								return _this.vali_time_pattern.test($(this)										.val());							},							showDanger_default : {								placement : 'top',								destroy : false							// distime: 2000							},							showDanger : function($ele, opts) { // 以Bootstrap								// Tooltip形式展现错误								var _this = this;								opts = $.extend(_this.showDanger_default, opts);								var placement = _this.showDanger_default.placement										|| 'top';								$ele.addClass('vali_error');								$ele.tooltip('show');								$('div.tooltip:last').find('.tooltip-arrow')										.addClass(												'tooltip-arrow-danger-'														+ placement);								$('div.tooltip:last').find('.tooltip-inner')										.addClass('tooltip-inner-danger');								$ele										.one(												'hidden.bs.tooltip',												function() {													$ele															.removeClass('vali_error');													if (opts.destroy) {														$ele.tooltip('destroy');													} else {														$('div.tooltip')																.find(																		'.tooltip-arrow')																.removeClass(																		'tooltip-arrow-danger-'																				+ placement);														$('div.tooltip')																.find(																		'.tooltip-inner')																.removeClass(																		'tooltip-inner-danger');													}												});								if (opts.distime) {									setTimeout(function() {										$ele.tooltip('destroy');									}, opts.distime);								}							},							locate : function(target) { // 页面滚动到指定class								window.location.hash = target;								var target_offset = $('.' + target).offset().top;								$('html, body').stop().animate({									scrollTop : target_offset - 40								}, 600);							}						};						vali.init();						// ============================= panel：测评报告												CodeMirror.modeURL = basePath								+ "/plugin/codemirror-3.21/mode/%N/%N.js";						var modalWaiting = {							$modalHint : $('#modal_waiting'),							$spinner : $('#modal_waiting .spinner'),							init : function() {								var _this = this;								this.$modalHint.modal({									backdrop : 'static',									keyboard : false,									show : false								});								this.$modalHint.on('shown.bs.modal',										function(e) {											_this.$spinner.spin({												corners : 1,												direction : 1,												hwaccel : false,												length : 15,												lines : 12,												radius : 20,												rotate : 0,												shadow : false,												speed : 1,												trail : 61,												width : 8,												left : 150,												top : -40											});										});								this.$modalHint.on('hide.bs.modal',										function(e) {											_this.$spinner.spin(false);										});							},							show : function(title) {								this.$modalHint.find('.title').text(title);								this.$modalHint.modal('show');							},							hide : function() {								this.$modalHint.modal('hide');							},							title : function(title) {								this.$modalHint.find('.title').text(title);							}						};						modalWaiting.init();						/**						 * privilege for operation						 */						var p4o = false;						var reportUrl = basePath + '/sets/report/getReportRO/'								+ TEST_ID + '/' + PASSPORT;						if (!PASSPORT) {							p4o = true;							reportUrl = basePath + '/sets/report/getReport/'									+ POSITION_ID + '/' + TEST_ID;						}						var resultSuccess = false;						if (report) {							result = report;							resultSuccess = true;							modalWaiting.hide();							render(report);							$('#hr_score_btn').show();							if (report.parts) {								getView.init();								intelSkill(report)								$('.change_rel_score').hide();							}							var loc = window.location.href.split("page/")[1];							if(loc.indexOf("goReportRO")!=-1){								$('#hr_score_btn').addClass("readOnly").show();								$('#hr_score_btn').find("a").addClass("readOnly");							}													} else {							$.setsAjax({								url : reportUrl,								type : 'post',								beforeSend : function() {									modalWaiting.show('正在加载测评报告...');								},								success : function(data) {									if (data.code == 0) {										result = data.data;										$('#hr_score_btn').show();										var loc = window.location.href.split("page/")[1];										if (result) {											resultSuccess = true;											modalWaiting.hide();											render(result);										}										if(loc.indexOf("goReportRO")!=-1){											$('#hr_score_btn').addClass("readOnly").show();											$('#hr_score_btn').find("a").addClass("readOnly");										}									}								},								error : function(e) {								},								complete : function() {									modalWaiting.hide();									getView.init();									intelSkill(result)								}							});						}						/** ****** 获取星星评分模板 ************ */						var Star = {							getStarTmpl : function(a) {								if (isNaN(a)) {									a = 0;								}								a = Math.round(a);								if (a < 0) {									a = 0;								}								if (a > 10) {									a = 10;								}								var items = [];								for ( var i = 0; i < 5; i++) {									if (a <= i * 2) {										items												.push('<i class="fa fa-star-o"></i>')									} else if (a < (i + 1) * 2) {										items												.push('<i class="fa fa-star-half-o"></i>');									} else {										items												.push('<i class="fa fa-star"></i>');									}								}								return items.join('');							},							convertRatio : function(a) {								var intA = parseInt(a);								var decimalA = ((a - intA) * 10).toFixed(0);								var addA = 0;								if (decimalA <= 2) {									addA = 0;								} else if (decimalA <= 7) {									addA = 0.5								} else {									addA = 1;								}								return intA + addA;							}						}						/**						 * 根据服务端数据显示测评报告信息						 */						function render(data) {							var items = [];							var $header = $('#header');							/** 报告名称 + 推荐/淘汰操作 */							if (result.summary && result.summary.name) {								document.title = result.summary.name + '的'										+ result.title + '的测评报告';							}							$('#test-name').text(									data.summary.name + "-" + data.title);							items									.push(' <span class="pull-right" style="margin-top:28px;margin-right:30px">');							switch (result.testResult * 1) {							case 0:								if (p4o) {									items											.push('<button class="btn btn-success button-small recommend mr10">推荐</button>');									items											.push('<button class="btn btn-danger button-small elimination">淘汰</button>');								}								break;							case 1:								items										.push('<button class="btn btn-success button-small " disabled><i class="fa fa-smile-o"></i> 已推荐</button>');								break;							case 2:								items										.push('<button class="btn btn-danger button-small " disabled><i class="fa fa-frown-o"></i> 已淘汰</button>');								break;							}							items.push('</span>');							items									.push('<span id="check" style="display:none">查看答题情况</span>');							if (!PASSPORT) {								items.push('<span id="download"><a href="'										+ basePath										+ '/sets/report/exportReport/'										+ TEST_ID + '/' + result.summary.name										+ "的" + result.title										+ '的测评报告.pdf">下载PDF</a></span>')							}							$('.header_report').append(items.join(''));							if (data.testResult * 1 == 0) {								/** 为推荐见和淘汰设置点击事件 */								$('.header_report')										.on(												'click',												'.pull-right button',												function(e) {													var $btn = $(e.target);													var action;													if ($btn															.hasClass('recommend')) { // 点击推荐														action = 1;													} else if ($btn															.hasClass('elimination')) { // 点击淘汰														action = 2;													}													var operSuccess = false;													$															.ajax({																url : basePath																		+ '/sets/report/setTestResult/'																		+ POSITION_ID																		+ '/'																		+ TEST_ID																		+ '/'																		+ action,																type : 'post',																beforeSend : function() {																	$header																			.find(																					'.title > span > button')																			.attr(																					'disabled',																					'disabled');																},																success : function(																		data) {																	if (data.code == 0) {																		if (data.data																				&& data.data.code == 'SUCCESS') {																			operSuccess = true;																			if (action == 1) {																				$(																						'.header_report')																						.find(																								'.pull-right ')																						.html(																								'<button class="btn btn-success button-small " disabled="true"><i class="fa fa-smile-o"></i> 已推荐</button>');																			} else {																				$(																						'.header_report')																						.find(																								'.pull-right ')																						.html(																								'<button class="btn btn-danger button-small " disabled="true"><i class="fa fa-frown-o"></i> 已淘汰</button>');																			}																		}																	}																},																error : function(																		e) {																},																complete : function() {																	if (!operSuccess) { // 如果没有成功																		$(																				'.header_report')																				.find(																						'.title > span > button')																				.removeAttr(																						'disabled');																	} else {																		$(																				'.header_report')																				.off(																						'click',																						'.title button');																	}																}															});												});							}							/** 报告生成时间 */							$header									.find('.report-date')									.append(											'开始答题时间：'													+ $															.sets_formatTime(result.beginTime)													+ ' — 交卷时间：'													+ $															.sets_formatTime(result.endTime));							/** 测评报告部分 */							var $container = $('#report_btn');							var $overview = $container.find('#graph_overview');							var summary = result.summary;							var refreshOverview = function(data) {								var $item = $overview.find('.anchor-'										+ data.anchor + '>' + '.score-val-'										+ data.anchor);								var items = [];								items.push('<div class="score-val-'										+ data.anchor + '">')								if (data.score || data.score == 0) {									items.push(data.score);								}								if (data.editable == true) {									items											.push(' <a href="#'													+ data.anchor													+ '"><i class="fa fa-pencil"></i></a>')								}								items.push('</div>')								$item.replaceWith($(items.join('')));							};							var getOverallItemTmpl = function(data) {								var items = [];								items.push('<li class="score-item anchor-'										+ data.anchor + '">');								items.push('<span>' + data.name + '</span>');								items.push('<div class="answerscore score-val-'										+ data.anchor + '">')								if (data.score || data.score == 0) {									items.push(data.score);								}								if (data.editable == true) {									items											.push(' <a class="grade-score" href="#'													+ data.anchor													+ '"><i class="fa fa-pencil"></i></a>')								}								items.push('</div>');								items.push('</li>');								return items.join('');							};							var anchorMap = {};							var G_techBaseData = null;							if (summary) {								G_techBaseData = (function() { // 剔除不含试题的标签									var skills = [];									var scores = [];									if (result.completion											&& result.completion.skillRatios) {										$('.tech-base-analysis').show();										var r = result.completion.skillRatios;										for ( var i = 0; i < r.length; i++) {											if (r[i] != 0) {												skills.push(summary.skills[i]);												scores														.push(summary.skillScores[i]);											}										}										return {											skills : skills,											scores : scores										};									}									return {										skills : summary.skills,										scores : summary.skillScores									}								})();								/** 头像 */								if (summary.portrait && summary.portrait != '') {									$('#personPhoto').find('img').attr('src',											summary.portrait);									/*									 * $container .imagesLoaded() .progress(									 * function(instance, image) { if									 * (!image.isLoaded) { image.img.src = root +									 * meta.defaultPortrait; } });									 */								}								/** 常规信息 */								$container.find('.base_info .candi-name').text(										summary.name);								$('.examinee-name').text(summary.name);								items.length = 0;								items										.push('<div class="my-col-5" style="padding-left:0">');								items.push('<table class="info-table">');								items.push('<tr>');								items.push('<td class="base_info_td">姓名：</td>');								items.push('<td class="asbestos">'										+ summary.name + '</td>');								items.push('</tr>');								if (summary.email) {									items.push('<tr>');									items											.push('<td class="base_info_td">Email：</td>');									items.push('<td class="asbestos">'											+ summary.email + '</td>');									items.push('</tr>');								}								summary.infos = summary.infos || [];								for ( var i = 0; i < summary.infos.length; i++) {									var info = summary.infos[i];									items.push('<tr>');									items.push('<td class="base_info_td">'											+ info.key + '：</td>');									items.push('<td class="asbestos">'											+ info.value + '</td>');									items.push('</tr>');								}								items.push('</table>');								items.push('</div>');								items										.push('<div class="my-col-7" style="padding-left:0">');								items.push('<ul class="left-view-content">');								items.push('<li>');								items										.push('<div class="score_end">技能测评得分：<span class="score_result">'												+ summary.score												+ '分</span> (满分10分）</div>');								items.push('</li>');								items.push('<li style="margin-left: 35px;">');								items.push('<div id="score_content">');								items.push('</div>');								items.push('</li>');								items.push('<li>');								items.push('<div>');								items										.push('<div class="my-col-4 score-items">');								items										.push('<p class="leaveContent">离开页面次数</p>');								items.push('<p class="leaveContent">');								items.push(summary.switchTimes + '次');								items.push('</p>')								items.push('</div>');								items										.push('<div class="my-col-4 score-items">');								items										.push('<p class="leaveContent">开始答题时间</p>');								items.push('<p class="leaveContent">');								items.push($.sets_formatTime(data.beginTime));								items.push('</p>');								items.push('</div>');								items										.push('<div class="my-col-4 score-items" style="border:none">');								items.push('<p class="leaveContent">交卷时间</p>');								items.push('<p class="leaveContent">');								items.push($.sets_formatTime(data.endTime));								items.push('</p>');								items.push('</div>');								items.push('</div>');								items.push('</li>');								items.push('</ul>');								items.push('</div>');								$container.find('.regularinfo').html(										items.join(''));								// highChars数据收集部分								var anchorsDatas = result.overallItems;								for ( var o = 0; o < data.overallItems.length; o++) {									var score = "";									if (anchorsDatas[o].score											|| anchorsDatas[o].score == 0) {										score = anchorsDatas[o].score;									} else {										score = 0;									}									var rel_score = Math.round(score);									// Create the chart									var $scorediv = $('<div class="pie-div score-pie-'											+ rel_score											+ '" id='											+ anchorsDatas[o].anchor + '>');									$('#score_content').append($scorediv);									var rel_name = "";									if (anchorsDatas[o].name) {										$scorediv												.append('<div class="name-anchors">'														+ anchorsDatas[o].name														+ '</div>');									}									if (anchorsDatas[o].score											|| anchorsDatas[o].score == 0) {										$scorediv												.append('<div class="score-anchors">'														+ anchorsDatas[o].score														+ '</div>');									} else {										$scorediv												.append('<div class="score-anchors" style="font-size:20px;color:#428bca"><i class="fa fa-pencil"></i></div>');									}								}								// 定位部分								$('.pie-div')										.click(												function() {													var name = $(this).find(															'.name-anchors')															.text();													switch (name) {													case '附加编程':														window.location.href = "#systemcontent";														break;													case '编程题':														window.location.href = "#systemcontent";														break;													case '面试得分':														window.location.href = "#change-score";														break;													case '技能选择题':														window.location.href = "#select";														break;													case '智力题':														window.location.href = "#iq";														break;													case '技能问答题':														window.location.href = "#essays";													}												});								/** 得分 */								$container.find('.base_info .score_result')										.html(												' <span style="color:red;">'														+ summary.score														+ '分</span>');								/** 中断/离开次数 */								$container.find('.base_info .switchtime').text(										summary.switchTimes);								/** 全面概述：掌握情况图表加载 ***************************** */								/** 全面概述 */								if (data.overallItems) {									$('.overview').show();									var scores = data.overallItems || [];									var items = [];									if (scores.length > 0) {										items												.push('<ul class="list-inline items-score">');										for ( var i = 0; i < scores.length; i++) {											var score = scores[i];											if (score.anchor) {												anchorMap[score.anchor] = score;											}											items													.push(getOverallItemTmpl(score));										}										items.push('</ul>');									}									$('#graph_overview').html(items.join(''));									$('#graph_overview')											.on(													'click',													'.grade-score',													function() {														var hash = $(this)																.attr('href');														var $tmpHash = $(hash);														if (hash																&& $tmpHash.length) {															var point = $tmpHash																	.offset().top - 90;															$('html, body')																	.stop()																	.animate(																			{																				scrollTop : point																			},																			400);														}														;														return false;													});								}								/** 技术基础分析 ***************************** */								// 整理数据								if(summary.skills){									$('.skill-analysis').show();									$('.sed_title').show();								}								if (summary.scoreRanges) {																		var plotBands = [];									summary.scoreRanges.push(10);									var zColor = Highcharts.Color('#ECF0F5')											.brighten(0.05).get();									for ( var i = 0; i < meta.levels.length; i++) {										var level = meta.levels[i];										plotBands.push({											from : summary.scoreRanges[i],											to : summary.scoreRanges[i + 1],											color : i % 2 == 0 ? '#ECF0F5'													: zColor,											label : {												text : level,												style : {													color : '#606060'												}											}										});									}									// 根据分值判断所在区间									var belongRange = function(score) {										for ( var i = 1; i < summary.scoreRanges.length; i++) {											if (score < summary.scoreRanges[i]) {												return meta.levels[i - 1];											}										}										return meta.levels[meta.levels.length - 1];									};									var tooltipColors = [ '#3498DB', '#FA4444',											'#3EBFBE' ];									$('#graph_tech_base')											.highcharts(													{														title : {															text : ''														},														credits : {															enabled : false														},														xAxis : [ {															tickWidth : 0,															lineWidth : 1,															categories : G_techBaseData.skills														} ],														yAxis : {															tickPositions : summary.scoreRanges,															min : 0,															max : meta.max,															title : {																text : null															},															labels : {																formatter : function() {																	return '';																}															},															gridLineWidth : 0,															alternateGridColor : null,															plotBands : plotBands														},														tooltip : {															shared : true,															formatter : function() {																var result = [];																result.push[this.x];																for ( var i = 0; i < this.points.length; i++) {																	var point = this.points[i];																	result																			.push(point.series.name																					+ ': <span style="color:'																					+ tooltipColors[i]																					+ '">'																					+ belongRange(point.y)																					+ '</span>');																}																return result																		.join('<br/>');															}														},														legend : {															// layout :															// 'vertical',															// align : 'right',															// x : 0,															verticalAlign : 'bottom'														// y : 0,														// floating : true,														// backgroundColor :														// '#FFFFFF'														},														series : [ {															type : 'bar',															name : '掌握程度',															color : 'rgba(102, 153, 204, 0.5)',															data : G_techBaseData.scores														} /*															 * , { type :															 * 'line', name :															 * '平均程度', color :															 * '#FA4444', data :															 * summary.avgScores }															 */]													});								}							}							/** 答题正确率分析 ********************************** */							if (data.accuracy) {								$('.accuracy-analysis').show();								$('.accuracy-analysis .paragraph').html(										data.accuracy.desc);								var _categories = [], _accuracy_complete = [], _accuracy = [];								if (data.accuracy										.hasOwnProperty('choiceAccuracy')) {									_categories.push('选择题');									_accuracy_complete											.push(1 - data.accuracy.choiceAccuracy);									_accuracy											.push(data.accuracy.choiceAccuracy);								}								if (data.accuracy										.hasOwnProperty('subjectAccuracy')) {									_categories.push('编程题');									_accuracy_complete											.push(1 - data.accuracy.subjectAccuracy);									_accuracy											.push(data.accuracy.subjectAccuracy);								}								$('#graph_accuracy')										.highcharts(												{													credits : {														enabled : false													},													chart : {														type : 'column'													},													title : null,													colors : [															'rgba(238, 238, 238, 0.5)',															'#7DB500' ],													xAxis : {														categories : _categories													},													yAxis : {														title : null,														min : 0,														labels : {															formatter : function() {																return this.value																		+ '%';															}														}													},													legend : {														enabled : false													},													tooltip : {														shared : true,														formatter : function() {															var items = [];															// if ((1 - this.y															// == 0) || (1 -															// this.y == 100)) {															// items.push(this.x															// + '的正确率：' + ((1															// - this.y) * 100)															// + '%');															// } else {															// items.push(this.x															// + '的正确率：' + ((1															// - this.y) *															// 100).toFixed(1) +															// '%');															// }															items																	.push(this.x																			+ '的正确率：'																			+ Math																					.round((1 - this.y) * 100)																			+ '%');															return items																	.join('');														}													},													plotOptions : {														column : {															stacking : 'percent'														}													},													series : [															{																name : 'accuracy_complete',																data : _accuracy_complete															},															{																name : 'accuracy',																data : _accuracy															} ]												});							}							/** 答题时间分析 ************************************* */							if (result.completion && G_techBaseData									&& result.completion.skillRatios) {								$('.time-ans-analysis').show();								// 1.数据整理								var tagData = [], testData = [], testOData = [];								var len = meta.colors.length;								for ( var i = 0; i < data.completion.skillRatios.length; i++) {									if (data.completion.skillRatios[i] != 0) {										tagData.push({											name : data.summary.skills[i],											y : data.completion.skillRatios[i],											color : meta.colors[i % len]										});									}								}								var graph_analysis1_index = 0;								// 2.创建图表								$('#graph_time-ans')										.highcharts(												{													credits : {														enabled : false													},													chart : {														type : 'pie'													},													title : {														text : '<div style="color:rgb(52, 152, 219);text-align:center;">作答时间<p style="color: #FF7F1C;font-size: 1em;">'																+ $																		.sets_prettyTime(data.completion.spentTime)																+ '</p><div>',														align : 'center',														verticalAlign : 'middle',														useHTML : true,														y : -15,													},													plotOptions : {														pie : {															center : [ '50%',																	'50%' ]														}													},													tooltip : {														enabled : false													},													series : [ {														name : 'skills',														data : tagData,														size : '40%',														innerSize : '30%',														dataLabels : {															formatter : function() {																var index = graph_analysis1_index++;																return this.point.name																		+ ': '																		+ '<span style="color:'																		+ this.point.color																		+ ';">占'																		+ Math																				.round(this.point.y * 100)																		+ '%</span>'																		+ '<br/>作答时间: '																		+ '<span style="color:'																		+ this.point.color																		+ ';">'																		+ $																				.sets_prettyTime(data.completion.skillTimes[index])																		+ '</span>'																		+ '<br/>平均作答时间: '																		+ '<span style="color:'																		+ this.point.color																		+ ';">'																		+ $																				.sets_prettyTime(data.completion.avgSkillTimes[index]);															}														}													} ]												});							}							if (data.interview && data.interview.interviewInfo									&& data.interview.interviewInfo.groups) {								// 整理回显数据								var reviewDataManager = {									reviewMap : {},									getKey : function(gId, iId) {										return 'G_' + gId + '_I_' + iId;									},									assembleReviewData : function(reviewArray) {										for ( var i = 0; i < reviewArray.length; i++) {											var reviewData = reviewArray[i];											this.reviewMap[this.getKey(													reviewData.groupId,													reviewData.infoId)] = reviewData;										}									},									getReviewData : function(key, key2) {										if (arguments.length == 2) {											return this.reviewMap[this.getKey(													key, key2)]										}										return this.reviewMap[key];									}								};								reviewDataManager										.assembleReviewData(data.interview.items												|| []);								var showInterviewScores = false;								var iScoresItems = [];								var iGroups = data.interview.interviewInfo.groups										|| [];								for ( var i = 0; i < iGroups.length; i++) {									var group = iGroups[i];									if (group.id == 'INTERVIEW_ITEM') {										iScoresItems = group.items || [];										if (iScoresItems.length > 0) {											showInterviewScores = true;											break;										}									}								}								if (showInterviewScores) {									$('.hr_remark').show();									$('.hr_remark > .anchor').attr('id',											data.interview.anchor);									var avgScoreInfo = anchorMap[data.interview.anchor];									for(var p=0;p<result.overallItems.length;p++){										if(result.overallItems[p].anchor==4){											if(result.overallItems[p].score){												inter = result.overallItems[p].score;												$('.hr_remark > .title > small').text(												inter+"分");											} else {												$('.hr_remark > .title > small').text(												'未打分');											}											}										}									/** 如果有面试视频 linmy by 2014年7月22日 * */									$('.hr_remark > .title > .fa-video-camera')											.hide();									var flowObjs = new Array();									if (data.videos && data.videos.length > 0) {										for ( var i = 0; i < data.videos.length; i++) {											var video = data.videos[i];											var hasAnswer = video.url													&& (video.url != '');											if (hasAnswer) {												var _url = video.url;												var parts = _url														.split('Signature=');												if (parts.length == 2) {													_url = parts[0]															+ 'Signature='															+ encodeURIComponent(parts[1]);												}												var flowObj = {													url : _url,// 需要播放的文件													urlEncoding : false,													autoPlay : true,													autoBuffering : true,													title : (i + 1) + "："															+ video.title												};												flowObjs.push(flowObj);											}										}									}									if (flowObjs.length <= 0)										$(												'.hr_remark > .title > .fa-video-camera')												.hide();									else										$(												'.hr_remark > .title > .fa-video-camera')												.show();									$('.hr_remark > .title > .fa-video-camera')											.on(													'click',													function() {														var $videoModal = $('#interview_video');														$videoModal																.find(																		'.modal-title')																.text(																		$(this)																				.text());														// $videoModal.modal();														$videoModal.show();														$videoModal																.find('.close')																.click(																		function() {																			$videoModal																					.hide();																		});														$videoModal																.find(																		'.i-skill-mask')																.click(																		function() {																			$videoModal																					.hide();																		});														flowplayer(																"video_player",																root																		+ '/plugin/flowplayer/flowplayer-3.2.18.swf',																{// 播放器主文件（根据项目定亦可引用：http://releases.flowplayer.org/swf/flowplayer-3.2.12.swf）																	clip : {																		autoPlay : true,// 自动播放																		autoBuffering : true,// 是否开启缓冲																		onStart : function(																				clip) {																			$videoModal																					.find(																							'.modal-title')																					.text(																							clip.title);																		}																	},																	playlist : flowObjs,																	plugins : {																		controls : {																			bottom : 0,// 功能条距底部的距离																			height : 24, // 功能条高度																			zIndex : 1,																			fontColor : '#ffffff',																			timeFontColor : '#333333',																			playlist : true,// 上一个、下一个按钮																			play : true, // 开始按钮																			volume : true, // 音量按钮																			mute : true, // 静音按钮																			stop : true,// 停止按钮																			fullscreen : true, // 全屏按钮																			scrubber : true,// 进度条																			url : root																					+ "/plugin/flowplayer/flowplayer.controls-3.2.16.swf", // 决定功能条的显示样式（功能条swf文件,根据项目定亦可引用:http://releases.flowplayer.org/swf/flowplayer.controls-3.2.12.swf）																			time : true, // 是否显示时间信息																			autoHide : true, // 功能条是否自动隐藏																			buttonColor : 'rgba(51, 51, 51, 1)',																			buttonOverColor : '#0687d1',																			// backgroundGradient:																			// 'medium',																			sliderColor : '#333333',																			//								                         																			sliderBorder : '1px solid #333333',																			volumeSliderColor : '#333333',																			volumeBorder : '1px solid #333333',																			//								                         																			timeColor : '#000000',																			durationColor : '#333333',																			//								                        																				tooltipColor : 'rgba(51, 51, 51, 1)',																			tooltipTextColor : '#0687d1',																			backgroundColor : '#d0d0d0', // 背景颜色																			backgroundGradient : [																					1.0,																					1.0,																					1.0 ], // 背景颜色渐变度（等分的点渐变）																			opacity : 0.5, // 功能条的透明度																			tooltips : {																				buttons : true,// 是否显示																				fullscreen : '全屏',// 全屏按钮，鼠标指上时显示的文本																				stop : '停止',																				play : '开始',																				volume : '音量',																				mute : '静音',																				next : '下一个',																				previous : '上一个'																			}																		}																	}																});														return false;													});									/** 综合素质 */									var hr_score = {										$chart : $('#graph_hr_score'), // 图										$btnWrapper : $('.hr_score_operation'),										$editor : $('.hr_remark .score_editor'), // 编辑区										$btn : $('#hr_score_btn'),										$avgScore : $('.hr_remark > .title > small'),										$btnCancel : $('#hr_score_cancel'),										$editorHint : $('.hr_score_hint'),										$inputDimensionName : $('#interview_dimension_name'),										$inputDimensionDesc : $('#interview_dimension_desc'),										chart : null,										state : 0,										datas : iScoresItems,										_GROUP_ID : 'INTERVIEW_ITEM',										_series_data : [],										_anchor : data.interview.anchor,										barWidth : 30,										init : function() {											var _this = this;											var hr_score_categories = [];											for ( var i = 0; i < this.datas.length; i++) {												var score = this.datas[i];												hr_score_categories														.push(score.name);												var reviewData = reviewDataManager														.getReviewData(																_this._GROUP_ID,																score.id);												if (reviewData) {													this._series_data															.push(parseInt(reviewData.value));												} else {													this._series_data.push(0);												}											}											this													.renderGraph(hr_score_categories);											this.load();											if (p4o) {												this.initEditor();											} else {												this.$btnWrapper.hide();											}										},										refreshAvgScore : function(data, anchor) {											this.$avgScore.text('平均分：'													+ data.score);											data.anchor = anchor;											refreshOverview(data);										},										initEditor : function() {											var _this = this;											$('#confirm_score').show();											this.$btn													.click(function() {														$('#hr_score_btn')																.hide();														$('#hr_score_btn')																.parent()																.parent()																.hide();														$('#interview-area')																.show();														$('.change-score >div')																.show();														$('#confirm_score')																.show();														if (_this.state == 0) { // 展示编辑															_this.state = 1;															$('#confirm_score')																	.html(																			'<i class="icon-save"></i> 确认打分');															_this.load();															_this.$chart.hide();															_this.$editor																	.fadeIn();															_this.$btnCancel																	.fadeIn();														} else { // 展示图表														}														$('#confirm_score')																.click(																		function() {																			_this																					.saveScores();																		});													});											this.$btnCancel													.click(function() {														$('#confirm_score')																.hide();														$('#hr_score_btn')																.show();														$('#hr_score_btn')																.parent()																.parent()																.show();														$('#graph_hr_score')																.show();														$('.change-score >div')																.hide();														_this.state = 0;														_this.$btn																.html('<i class="icon-edit"></i> 修改打分');														/*														 * _this.$editor.hide();														 * _this.$btnCancel.hide();														 * _this.$chart.fadeIn();														 */													});										},										renderDemension : function(data,												reviewValue) {											var items = [];											items													.push('<div class="row demension-item row1">');											items													.push('<div class="my-col-2 text-right mr10 demension-name" style="font-size:14px;margin-right:20px">');											items.push(data.name);											items													.push('</div><div class="my-col-5"><div class="myslider"></div></div>');											items													.push('<div class="my-col-3"><span class="label label-default demension-score">');											items.push(reviewValue || 0);											items.push('分</span></div>');											items.push('</div>');											var $item = $(items.join(''));											this.$editor.children('.slider')													.append($item);											$item													.find('div.myslider')													.slider(															{																min : 0,																max : 10,																range : "min",																value : reviewValue || 0,																slide : function(																		event,																		ui) {																	$item																			.find(																					'span.label')																			.text(																					ui.value																							+ '分');																},																change : function(																		event,																		ui) {																}															});											$item.data(data);										},										saveScores : function() {											var _this = this;											// 收集数据											// $editorHint: $('.hr_score_hint');											var requestData = [];											$													.each(															_this.$editor																	.find('.demension-item'),															function(i, ele) {																var item = {};																var data = $(																		this)																		.data();																item.groupId = 'INTERVIEW_ITEM';																item.infoId = data.id;																item.value = parseInt($(																		this)																		.find(																				'.demension-score')																		.text());																item.realValue = item.value;																requestData																		.push(item);															});											var success = false;											$													.setsAjax({														url : basePath																+ '/sets/report/saveInterview/'																+ TEST_ID,														type : 'post',														data : JSON																.stringify(requestData),														contentType : 'application/json',														beforeSend : function() {															_this.$btn.hide();															_this.$btnCancel																	.hide();															$('#confirm_score')																	.hide();															_this.$editorHint																	.text(																			'正在保存打分...')																	.show();														},														success : function(data) {															if (data.code == 0) {																if (data.data																		&& data.data.errorCode == 0) {																	success = true;																	_this.state = 0;																	_this.$editor																			.hide();																	$(																			'#interview-area')																			.hide();																	$('.titlea')																			.parent()																			.show();																	_this.$btnCancel																			.hide();																	_this.$editorHint																			.hide();																	_this.$btn																			.html('<i class="icon-edit"></i> 修改打分');																	_this.$btn																			.fadeIn();																	var _hr_score_categories = [];																	_this._series_data = [];																	_this.datas.length = 0;																	$																			.each(																					_this.$editor																							.find('.demension-item'),																					function(																							i,																							ele) {																						var data = $(																								this)																								.data();																						var value = parseInt($(																								this)																								.find(																										'.demension-score')																								.text());																						_this.datas																								.push({																									id : data.id,																									name : data.name,																									value : value,																									desc : data.description																								})																						_hr_score_categories																								.push(data.name);																						_this._series_data																								.push(value);																					});																	_this.$chart																			.fadeIn();																	_this																			.renderGraph(_hr_score_categories);																	_this																			.refreshAvgScore(																					data.data,																					_this._anchor);																}															}														},														error : function(e) {														},														complete : function() {															if (!success) {																_this.$editorHint																		.text('保存打分失败');																setTimeout(																		function() {																			_this.$btn																					.fadeIn();																			_this.$btnCancel																					.fadeIn();																			_this.$editorHint																					.hide();																		}, 2000);															} else {																/*																 * $(																 * '#confirm_score')																 * .hide(); $(																 * '#hr_score_btn')																 * .parent()																 * .parent()																 * .show();																 */																$('#5 >div')																		.first()																		.remove();																var score = $(																		'#video-interview >small')																		.text()																		.split(																				'：')[1];																var name = "面试评分";																var div = 4;																scoreHighchars																		.myreload(																				div,																				name,																				score)															}														}													})										},										renderGraph : function(												hr_score_categories) {											var _this = this;											var gHeight = _this.barWidth													* (_this._series_data.length + 1);											this.chart = new Highcharts.Chart(													{														chart : {															renderTo : 'graph_hr_score',															type : 'bar',															height : gHeight														},														title : {															text : null														},														credits : {															enabled : false														},														colors : meta.colors,														tooltip : {															enabled : false														},														xAxis : {															categories : hr_score_categories,															tickWidth : 0,															lineWidth : 0,															labels : {																style : {																	color : '#77818E',																	fontSize : '14px'																}															}														},														yAxis : {															min : 0,															title : {																text : null															},															lineWidth : 0,															gridLineWidth : 0,															labels : {																formatter : function() {																	return '';																}															},															tickPositions : [																	0, 1, 2, 3,																	4, 5, 6, 7,																	8, 9, 10,																	11, 12 ]														// 多留两个刻度保证label显示在图标外部														},														legend : {															enabled : false														},														plotOptions : {															series : {																stacking : 'normal'															},															bar : {																dataLabels : {																	enabled : true,																	formatter : function() {																		return '<span style="font-weight:bold;font-size:1.2em;color: #FF7F1C;"> '																				+ this.y																				+ '分</span>';																	},																	inside : false																}															}														},														series : [ {															name : '',															data : _this._series_data														} ]													});										},										load : function() {											var _this = this;											this.$editor.children('.slider')													.empty();											$													.each(															this.datas,															function(i, data) {																_this																		.renderDemension(																				data,																				_this._series_data[i]);															});										}									};									hr_score.init();								}							}							/** 附加题 ******************** */							var addition = {								_selector_wrapper : '.self_set',								$tech : $('.extra-tech'),								$busi : $('.extra-busi'),								$iq : $('.extra-iq'),								init : function() {									var _this = this;									if (data.iq) {										_this.initQuestion(data.iq, new Date()												.getTime() + 20, _this.$iq);									}									if (data.busi) {										_this.initQuestion(data.busi,												new Date().getTime() + 10,												_this.$busi);									}									if (data.tech) {										this.initQuestion(data.tech, new Date()												.getTime(), this.$tech);									}									this.bindEvent();								},								initQuestion : function(extra, id, $wrapper) {									$wrapper.children('.anchor').attr('id',											extra.anchor);									var avgScoreInfo = anchorMap[extra.anchor];									if (avgScoreInfo											&& (avgScoreInfo.score || avgScoreInfo.score == 0)) {										$wrapper.find('.title > small').text(												'平均分：' + avgScoreInfo.score);									} else {										$wrapper.find('.title > small').text(												'未打分');									}									var datas = extra.partItems || [];									if (datas.length > 0) {										$wrapper.show();										var seq = 1;										for ( var i = 0; i < datas.length; i++) {											var data = datas[i];											id = id + i;											this.addAddition(seq++, data, id,													$wrapper, extra.anchor);										}									}								},								bindEvent : function() {									var _this = this;									$(this._selector_wrapper)											.on(													'click',													'.extra-grading a',													function() {														var $this = $(this);														var data = $this																.closest(																		'.extra-grading')																.data();														var $render = $this																.closest('.grading-render');														$render.hide();														$render																.next(																		'.grading-edit')																.show();													})											//											.on(													'click',													'button.grading-save',													function() {														var $this = $(this);														var data = $this																.closest(																		'.extra-grading')																.data(																		'question');														var $editor = $this																.closest('.grading-edit');														var $render = $editor																.prev();														_this																.gradeExtra(																		data.anchor,																		data.questionId,																		$editor,																		$render);													})											//											.on(													'click',													'button.grading-cancel',													function() {														var $this = $(this);														var $editor = $this																.closest(																		'.grading-edit')																.hide();														$editor.prev().show();													})											//											.on(													'keyup blur',													'input',													function() {														var $this = $(this);														var score = $																.trim($this																		.val()) * 1;														if (!isNaN(score)																&& (0 <= score)																&& (10 >= score)) {															if ((score + '')																	.indexOf('.') > -1) {																$this																		.val(score																				.toFixed(1));															}															$this																	.siblings(																			'button.grading-save')																	.removeAttr(																			'disabled');														} else {															$this																	.siblings(																			'button.grading-save')																	.attr(																			'disabled',																			'disabled');														}													});//									$('#graph_overview')											.on(													'click',													'.score-item',													function() {														var name = $(this)																.find('span')																.text();														if (name == "技术基础") {															window																	.open(																			basePath																					+ "/sets/page/testReport/"																					+ TEST_ID																					+ "/1?part=select",																			'_blank');														} else if (name == "编程能力"																|| name == "附加编程") {															window																	.open(																			basePath																					+ "/sets/page/testReport/"																					+ TEST_ID																					+ "/1?part=system",																			'_blank');														} else if (name == "技术问答") {															window																	.open(																			basePath																					+ "/sets/page/testReport/"																					+ TEST_ID																					+ "/1?part=essays",																			'_blank');														} else if (name == "智力") {															window																	.open(																			basePath																					+ "/sets/page/testReport/"																					+ TEST_ID																					+ "/1?part=iq",																			'_blank');														} else if (name == "面试评分") {															window.location.href = "#5"														}													});									$('#score_content')											.on(													'click',													'.pie-div>.name-anchors',													function() {														var name = $(this)																.parent()																.parent().find(																		'span')																.text();														if (name == "技术基础") {															window																	.open(																			basePath																					+ "/sets/page/testReport/"																					+ TEST_ID																					+ "/1?part=select",																			'_blank');														} else if (name == "编程能力"																|| name == "附加编程") {															window																	.open(																			basePath																					+ "/sets/page/testReport/"																					+ TEST_ID																					+ "/1?part=system",																			'_blank');														} else if (name == "技术问答") {															window																	.open(																			basePath																					+ "/sets/page/testReport/"																					+ TEST_ID																					+ "/1?part=essays",																			'_blank');														} else if (name == "智力") {															window																	.open(																			basePath																					+ "/sets/page/testReport/"																					+ TEST_ID																					+ "/1?part=iq",																			'_blank');														} else if (name == "面试评分") {															window.location.href = "#4"														}													});									$('#check').click(function() {										window.location.href = "#testReport";									});								},								refreshRelative : function(anchor, score, data,										$render) {									$render.children('.label')											.text(score + '分');									$render											.children('a')											.html(													'<i class="fa fa-pencil"></i> 修改打分');									$render.closest('.self_set').children(											'.title').children('small').html(											'平均分：' + data.score);									data.anchor = anchor;									refreshOverview(data);								},								gradeExtra : function(anchor, questionId,										$editor, $render) {									var _this = this;									var success = false;									var $saveBtn = $editor											.children('.grading-save');									var $cancelBtn = $editor											.children('.grading-cancel');									var $input = $editor.children('input');									$											.setsAjax({												url : basePath														+ '/sets/report/scoreQuestion',												data : {													anchor : anchor,													questionId : questionId,													score : $input.val(),													testId : TEST_ID												},												type : 'post',												beforeSend : function() {													$saveBtn.attr('disabled',															'disabled').text(															'提交中');													$cancelBtn.attr('disabled',															'disabled');													$input.attr('disabled',															'disabled');												},												success : function(data) {													if (data && data.code == 0) {														if (data.data.errorCode == 0) {															success = true;															$saveBtn																	.removeAttr(																			'disabled')																	.text('保存');															$cancelBtn																	.removeAttr('disabled');															$input																	.removeAttr('disabled');															$editor.hide();															_this																	.refreshRelative(																			anchor,																			$input																					.val(),																			data.data,																			$render);															$render.show();														}													}												},												complete : function() {													if (!success) {														$saveBtn.text('保存失败');														setTimeout(																function() {																	$saveBtn																			.removeAttr(																					'disabled')																			.text(																					'保存');																	$cancelBtn																			.removeAttr('disabled');																	$input																			.removeAttr('disabled');																	$editor																			.hide();																	$render																			.show();																}, 1000);													}												}											});								},								getGradingTmpl : function(question, anchor) {									var items = [];									question.anchor = anchor;									items											.push('<div class="extra-grading" data-question=\''													+ JSON															.stringify({																questionId : question.questionId,																anchor : anchor															}) + '\'>');									items.push('<div class="grading-render">');									if (question.score || question.score == 0) {										items												.push('<span class="label label-warning">'														+ question.score														+ '分</span> ');										items												.push('<a class="text-warning"><i class="fa fa-pencil"></i> 修改打分</a>');									} else {										items												.push('<span class="label label-warning"></span> ');										items												.push('<a class="text-warning"><i class="fa fa-pencil"></i> 打分</a>')									}									items.push('</div>');									items											.push(' <div class="grading-edit gone">');									items											.push(' <input placeholder="范围：0-10，精度0.1" type="text" style="width: 160px;display:inline-block;" class="form-control">');									items											.push(' <button class="btn btn-info btn-sm grading-save" disabled="disabled">保存</button>');									items											.push(' <button class="btn btn-default btn-sm grading-cancel">取消</button>');									items.push('</div>');									items.push('</div>');									return items.join('');								},								addAddition : function(seq, question, id,										$wrapper, anchor) {									var items = [];									items											.push('<div class="paragraph extra-topic"><span class="extra-seq">'													+ seq													+ '、</span>'													+ question.title + '</div>');									items.push('<div class="extra-answer">');									items.push(this.getGradingTmpl(question,											anchor));									items.push('<ul class="nav nav-tabs">');									items											.push('<li class="active"><a href="#ans_'													+ id													+ '" data-toggle="tab">考生答案</a></li>');									if (question.refAnswer) {										items												.push('<li><a href="#ans_ref_'														+ id														+ '" data-toggle="tab">参考答案</a></li>');									}									// 考生用时									items											.push('<span class="ml20 mt10 p5 badge">');									items											.push('考生用时：'													+ $															.sets_prettyTime(question.answerTime));									items											.push('， 平均用时：'													+ $															.sets_prettyTime(question.avgAnswerTime));									items.push('</span>');									items.push('</ul>');									items.push('<div class="tab-content">');									items											.push('<div class="tab-pane active fade in" style="padding:0;margin:0;" id="ans_'													+ id + '">');									items.push('</div>');									if (question.refAnswer) {										items												.push('<div class="tab-pane fade" id="ans_ref_'														+ id + '">');										items.push('</div>');									}									items.push('</div>');									items.push('</div>');									$wrapper.append($(items.join('')));									if (!question.hasOwnProperty('mode')) {										var $eleAns = $(this												.addEssayAns(question.answer														|| '未作答'));										$wrapper.find('#ans_' + id).append(												$eleAns);										var $eleRefAns = $(this												.addEssayAns(question.refAnswer));										$wrapper.find('#ans_ref_' + id).append(												$eleRefAns);									} else {										var $eleAns = $('<div>').addClass(												'code_maxtrix');										$wrapper.find('#ans_' + id).append(												$eleAns);										var cm = this.addCodeAns(												question.answer || '未作答',												question.mode, $eleAns);										var $eleRefAns = $('<div>').addClass(												'code_maxtrix');										$wrapper.find('#ans_ref_' + id).append(												$eleRefAns);										var cmref = this.addCodeAns(												question.refAnswer,												question.mode, $eleRefAns);										$wrapper												.find('a[data-toggle="tab"]')												.on(														'shown.bs.tab',														function(e) {															if ($(e.target)																	.attr(																			'href') == '#ans_ref_'																	+ id) {																cmref.refresh();															}														});									}								},								addEssayAns : function(ans) {									var items = [];									items.push('<div class="text-muted">');									items.push(ans);									items.push('</div>');									return items.join('');								},								addCodeAns : function(ans, mode, $ele) {									var cm = CodeMirror($ele.get(0), {										value : ans || '',										viewportMargin : Infinity,										lineNumbers : !(mode == null),										lineWrapping : (mode == null),										readOnly : true									});									if (mode) {										this.loadMode(cm, mode);									}									return cm;								},								loadMode : function(answerMirror, val) { // 根据语言刷新编辑答案区域									if (answerMirror != null) {										var Mode = meta.modemapping[val];										if (Mode) {											answerMirror.setOption("mode",													Mode.mode);											CodeMirror.autoLoadMode(													answerMirror, Mode.path);										} else {											answerMirror.setOption(													'lineWrapping', true);										}									}								}							};							addition.init();							/** 异常图片 ******************** */							var $abnormal = $('.abnormal');							if (result) {								var photos = result.abnormalUrls || [];								if (photos.length > 0) {									$abnormal.show();									var items = [];									for ( var i = 0; i < photos.length; i++) {										if (i % 4 == 0) {											if (items.length > 0) {												items.push('</div>');											}											if ((i + 1) != photos.length) {												items														.push('<div class="row yc_img">');											}										}										items												.push('<div class="my-col-3" style="width:24%"><img src="');										items.push(photos[i]);										items												.push('" class="img-thumbnail"></div>');										if ((i + 1) == photos.length) {											items.push('</div>');										}									}									$abnormal.append(items.join(''));									/*									 * $abnormal .imagesLoaded() .progress(									 * function(instance, image) { if									 * (!image.isLoaded) { image.img.src = root +									 * meta.defaultPortrait; } });									 */								} else {									$abnormal.hide();								}							}							// =========== tabContent：试卷模型 ===========							var model = data.model;							if (model) {								/** 职位要求 *************************** */								var $paperModelContainer = $('#modal_btn');								$paperModelContainer.find('.pos-desc').html(										(model.requiresDesc || '').replace(												/\n/g, '<br/>'));								// $paperModelContainer.find('.pos-desc').html((model.requiresDesc								// || ''));								/** 题型结构组成 *************************** */								var desc = [], desc2 = [];								var parts = model.testPartInfos || [];								for ( var i = 0; i < parts.length; i++) {									desc.push(parts[i].partName);									if (i == (parts.length - 2)) {										desc.push('和')									} else {										desc.push('、')									}									desc2.push(parts[i].partName											+ parts[i].questionNum + '道');								}								if (desc.length > 0) {									desc.pop();									var descStr = '本次试卷由' + desc.join('')											+ parts.length + '部分组成，其中：'											+ desc2.join('，') + '。';									$paperModelContainer.find('.partDesc')											.text(descStr);								}								if (model.totalTime) {									$paperModelContainer											.find('.totalTime')											.text(													'考试时长：'															+ ((model.totalTime + 59) / 60)																	.toFixed(0)															+ '分钟');								}								/** 试卷考核重点 *************************** */								var skills = data.summary.skills || [];								var items = [];								for ( var i = 0; i < data.summary.skills.length; i++) {									items.push('<span class="model_tag">'											+ data.summary.skills[i]											+ '</span>');								}								$paperModelContainer.find('.model_tags').html(										items.join(''));								/** 各考核点的比重及难度比重 ******************************** */								var low = [], medium = [], high = [];								data.difficulties = data.difficulties || [];								for ( var i = 0; i < data.completion.skillRatios.length; i++) {									if (data.completion.skillRatios[i] != 0) {										low.push(data.difficulties[i]['low']);										medium												.push(data.difficulties[i]['medium']);										high.push(data.difficulties[i]['high']);									}								}								var modelChart = new Highcharts.Chart(										{											credits : {												enabled : false											},											chart : {												renderTo : 'model_ratio',												height : 400,												type : 'column'											},											colors : [ '#FF6666', '#FF9966',													'#FFCC66' ],											title : null,											xAxis : {												tickWidth : 0,												categories : G_techBaseData.skills											},											yAxis : {												title : null,												gridLineWidth : 0,												lineWidth : 0,												labels : {													formatter : function() {														return '';													}												}											},											tooltip : {												formatter : function() {													return this.x															+ '<br/>'															+ this.series.name															+ ': '															+ this.y															+ '/'															+ this.point.stackTotal;												}											},											plotOptions : {												column : {													stacking : 'normal',													dataLabels : {														enabled : true,														color : '#FFF',														formatter : function() {															return this.y == 0 ? ''																	: this.y;														}													}												}											},											series : [ {												name : '高难度',												data : high											}, {												name : '中难度',												data : medium											}, {												name : '低难度',												data : low											} ]										});								/**								 * 编程题考核分布（编程能力）								 * ********************************								 */								var codeRatios = model.programSkillInfos || [];								var desc = [ '无编程题' ];								if (codeRatios.length > 0) {									desc.length = 0;									for ( var i = 0; i < codeRatios.length; i++) {										desc.push(codeRatios[i].skillName);										desc.push(' ');										desc.push(codeRatios[i].questionNum);										desc.push('道');										if (codeRatios.length - 1 == i) {											desc.push('。');										} else {											desc.push('，');										}									}								}								$paperModelContainer.find('.code_ratio').html(										desc.join(''));							}							$('#report_btn').trigger('click');							$('#modal_btn').removeClass('active');							/** ===导航按钮================================================== */							var hash = window.location.hash.replace('#', '');							var $tmpHash = $('#' + hash);							if (hash && $tmpHash.length) {								var point = $tmpHash.offset().top - 90;								$(window).scrollTop($tmpHash.offset().top - 90);								if (hash == 5) {									hr_score.$btn.trigger('click');								}							}							;						} // End Render						// 点击试卷模型进入测评报告页面						var jump = {							init : function() {								this.testReport();							},							testReport : function() {								$('.click_camera').tooltip();								$('.candi-name')										.on(												'click',												'.testReport',												function() {													window															.open(																	basePath																			+ "/sets/page/testReport/"																			+ TEST_ID																			+ "/1",																	'_blank');												});							}						}						jump.init();						var scoreCommon = {							init : function() {								this.score();							},							score : function() {								$('#testReport').on('click', '.grading-save',										function() {											alert('fuck');										});							}						}						scoreCommon.init();					});	var modemapping = {		java : {			mode : 'text/x-java',			path : [ 'clike' ],			opt : {				intent : true			},			help : {				type : 'interface'			}		},		javascript : {			mode : 'text/javascript',			path : [ 'javascript' ],			opt : {				intent : true			}		},		sql : {			mode : 'text/x-sql',			path : [ 'sql' ],			opt : {				intent : true			}		},		shell : {			mode : 'shell',			path : [ 'shell' ],			opt : {				intent : true			}		},		html : {			mode : 'htmlmixed',			path : [ 'htmlmixed' ],			opt : {				intent : true			}		},		'c++' : {			mode : 'text/x-c++src',			path : [ 'clike' ],			opt : {				intent : true			},			help : {				type : 'file'			}		},		c : {			mode : 'text/x-csrc',			path : [ 'clike' ],			opt : {				intent : true			}		},		php : {			mode : 'text/x-php',			path : [ 'php', 'clike' ],			opt : {				intent : false			},			help : {				type : 'interface'			}		},		python : {			mode : 'text/x-python',			path : [ 'python' ],			opt : {				intent : false			}		}	};	var modeURL = root + "/plugin/codemirror-3.21/mode/%N/%N.js";	var getView = {		mirrors : {},		init : function() {			var $this = this;			var p4o = false;			$this.getReportView($this);		},		getReportView : function($this, reportUrl) {			if (result.parts) {				$('#testReport').show();				$('#check').show();			}			$('.title_username').text(result.summary.name + "的答题情况");			$('.title_score').text(result.score);			var beginTime = $.sets_formatTime(result.beginTime);			var endTime = $.sets_formatTime(result.endTime);			$('.startTime').text("开始时间:" + beginTime + "———— 交卷时间:" + endTime);			if (result.summary.sysBasicScore					|| result.summary.sysBasicScore == 0) {				$('.byscore').text(result.summary.sysBasicScore + "分");				$('#select').show();				$('.select_title_content').show();				$('.score_content').show();				$('.byscore').show();				$('.byscore').parent().show();			} else {				$('.byscore').hide();				$('.byscore').parent().hide();			}			if (result.summary.userBasicScore					|| result.summary.userBasicScore == 0) {				$('.sysscore').text(result.summary.userBasicScore + "分");				$('.select_title_content').show();				$('.score_content').show();				$('.sysscore').show();				$('.sysscore').parent().show();			} else {				$('.sysscore').hide();				$('.sysscore').parent().hide();			}			if (result) {				$('#system_list').hide();				var datas = result;				if (datas.sysBasicScore || datas.userBasicScore						|| datas.sysBasicScore == 0 || datas.userBasicScore) {					$('.float_select').show().addClass('skill_background');				}				if (datas.parts) {					for ( var z = 0; z < result.parts.length; z++) {						var partName = result.parts[z].partName;						var anchor = result.parts[z].anchor;						var floatTitle = $('.floatTitle');						if (anchor == 0) {							$('.select_exam_content').show();							$('#select').show();							$('.score-item').show();							var skill_content = [];							for ( var k = 0; k < result.parts[z].partItems.length; k++) {								var skillName = result.parts[z].partItems[k].skillName;								skill_content.push(skillName);							}							var skill_name = $.unique($(skill_content));							$('#sel_report_content').show();							$this.createSelectView(datas, z, skill_name);						} else if (anchor == 1) {							$('#system').show();							$('.float_system').show();							if (anchor == 1) {								$this.createSystemView(datas, z);							} else {								$this.additionSystem(datas, z);							}							if ($('.float_system').siblings().hasClass(									"skill_background")) {							} else {								$('.float_system').addClass('skill_background');							}						} else if (anchor == 2) {							$('.float_aq').show();							if ($('.float_aq').siblings().hasClass(									"skill_background")) {							} else {								$('.float_aq').addClass('skill_background');							}							$this.questionAnswer(datas, z);						} else if (anchor == 3) {							$('.float_iq').show();							if ($('.float_iq').siblings().hasClass(									"skill_background")) {							} else {								$('.float_iq').addClass('skill_background');							}							$this.iqQuestion(datas, z);						}					}					;				} else {					$('#testReport').hide();				}				if (datas.videos) {					if ($('.float_video').siblings().hasClass(							"skill_background")) {					} else {						$('.float_video').addClass('skill_background');					}					$('.float_video').show();					$this.videoPart(datas)				}				$this.bindEvent($this);				$this.score();				window.location.href = "#" + jump + "";			}		},		createSelectView : function(datas, z, skill_name) {			var selects = datas.parts[z].partItems;			var $self_paper = $('#self_paper_content');			var $skill_report = $('.skill_content_title');			var total = [];			var totalScore = 0;			var skill_content = [];			for ( var i = 0; i < selects.length; i++) {				var viewContent = [];				var answer_time = $.sets_prettyTime(selects[i].answerTime);				var avg_time = $.sets_prettyTime(selects[i].avgAnswerTime);				var rightAnswer = selects[i].optRefAnswer;				if (selects[i].optAnswer) {					var studentAnswer = selects[i].optAnswer;				} else {					var studentAnswer = "未作答";				}				var title = selects[i].title;				var answer = 0;				var sanswer = 0;				var rel_answer = [];				var stu_answer = [];				total.push(selects[i].score);				if (rightAnswer == studentAnswer) {					rightAnswer == rightAnswer.split("");					if (studentAnswer) {						studentAnswer = studentAnswer.split("");					}					for ( var l = 0; l < rightAnswer.length; l++) {						switch (rightAnswer[l]) {						case 'A':							answer = 0;							break;						case 'B':							answer = 1;							break;						case 'C':							answer = 2;							break;						case 'D':							answer = 3;							break;						case 'E':							answer = 4;							break;						case 'F':							answer = 5;							break;						}						for ( var p = 0; p < selects[i].options.length; p++) {							if (answer == p) {								rel_answer.push(selects[i].options[p]);							}						}					}					viewContent							.push('<div class="bs-callout bs-callout-success">');					viewContent							.push('<label class="technology_content_common"><ul class="content_title">');					viewContent.push('<li class="select_title">' + (i + 1)							+ '、');					if (selects[i].questionType == 2) {						viewContent.push('多选题[' + selects[i].skillName								+ ']</li>');					} else {						viewContent.push('单选题[' + selects[i].skillName								+ ']</li>');					}					viewContent.push('<li class="exam_time_total">');					viewContent							.push('<div style="exam_title_content">&nbsp;&nbsp;考生用时：（'									+ answer_time									+ '）平均用时：（'									+ avg_time									+ '）</div></li></ul>')					viewContent.push('<div style="margin-left:30px">' + title							+ '</div> </label>');					viewContent							.push('<li style="width:100%;background-color:#fff;list-style:none"><p class="technology_content_common" style="width:95%">');					viewContent.push('<p class="answer_right">考生答案：</p>');					for ( var o = 0; o < rel_answer.length; o++) {						viewContent.push('<span style="padding-left:50px">'								+ rel_answer[o] + '</span><br>');					}					viewContent.push(' </label></div>');					$skill_report.append(viewContent.join(""));				} else {					rightAnswer == rightAnswer.split("");					if (studentAnswer != "未作答") {						studentAnswer = studentAnswer.split("");					}					for ( var l = 0; l < rightAnswer.length; l++) {						switch (rightAnswer[l]) {						case 'A':							answer = 0;							break;						case 'B':							answer = 1;							break;						case 'C':							answer = 2;							break;						case 'D':							answer = 3;							break;						case 'E':							answer = 4;							break;						case 'F':							answer = 5;							break;						}						for ( var p = 0; p < selects[i].options.length; p++) {							if (answer == p) {								rel_answer.push(selects[i].options[p]);							}						}					}					if (studentAnswer != "未作答") {						for ( var m = 0; m < studentAnswer.length; m++) {							switch (studentAnswer[m]) {							case 'A':								sanswer = 0;								break;							case 'B':								sanswer = 1;								break;							case 'C':								sanswer = 2;								break;							case 'D':								sanswer = 3;								break;							case 'E':								sanswer = 4;								break;							case 'F':								sanswer = 5;								break;							}							for ( var n = 0; n < selects[i].options.length; n++) {								if (sanswer == n) {									stu_answer.push(selects[i].options[n]);								}							}						}					} else {						stu_answer.push(studentAnswer);					}					viewContent							.push('<div class="bs-callout bs-callout-danger">');					viewContent							.push('<label class="technology_content_common"><ul class="content_title">');					viewContent.push('<li class="select_title">' + (i + 1)							+ '、');					if (selects[i].questionType == 2) {						viewContent.push('多选题[' + selects[i].skillName								+ ']</li>');					} else {						viewContent.push('单选题[' + selects[i].skillName								+ ']</li>');					}					viewContent.push('<li class="exam_time_total">');					viewContent							.push('<div style="exam_title_content">&nbsp;&nbsp;考生用时：（'									+ answer_time									+ '）平均用时：（'									+ avg_time									+ '）</div></li></ul>')					viewContent.push('<div style="margin-left:30px">' + title							+ '</div> </label>');					viewContent							.push('<div style="width:100%;background-color:#fff;list-style:none"><div class="technology_content_common" style="width:95%">');					viewContent.push('<p class="answer_wrong">考生答案：');					viewContent.push('</p> ');					for ( var o = 0; o < stu_answer.length; o++) {						viewContent.push('<span style="margin-left:34px">'								+ stu_answer[o] + '</span><br>');					}					viewContent.push('<p class="answer_re_right">正确答案：</p>');					for ( var a = 0; a < rel_answer.length; a++) {						viewContent.push('<span style="margin-left:34px">'								+ rel_answer[a] + '</span><br>');					}					viewContent.push('</div>');					$skill_report.append(viewContent.join(""));				}			}		},		// 创建编程题部分模板		createSystemView : function(datas, z) {			var that = this;			var $thispart = datas.parts[z].partItems;			var $baiyiSystem = $('.systemcontent');			var $selfSystem = $('#selfSystem');			var bysystemIndex = 1;			for ( var i = 0; i < $thispart.length; i++) {				var id = Math.guid();				var title = $thispart[i].title;				var ref_answer = "";				var answer = "";				var mode = $thispart[i].mode.toLowerCase();				var answer_time = $.sets_prettyTime($thispart[i].answerTime);				var avg_time = $.sets_prettyTime($thispart[i].avgAnswerTime);				var score = $thispart[i].score;				if (score || score == 0) {					score = $thispart[i].score				} else {					score = "未评";				}				if (!mode) {					mode = "无";				}				if ($thispart[i].refAnswer) {					ref_answer = $thispart[i].refAnswer;				} else {					ref_answer = "无";				}				if ($thispart[i].answer) {					answer = $thispart[i].answer;				} else {					answer = "无";				}				if ($thispart[i].prebuilt == true) {					var content = [];					content.push('<div class="bs-callout bs-callout-info">');					content							.push('<li class="" style="padding-left:20px;"><span class="skill_name_sys">语言：'									+ mode + '</span><br/><label class="">');					content							.push('<span style="font-size: 17pt;color:rgb(66,139,202)">'									+ (titleIndex++) + '、</span>');					content.push('' + title + '</label></li>');					content							.push('<li><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="stu_answer_content_score"><span class="label label-warning sysScore">'									+ score + '分</span></li><br><br>');					content.push('<li style="float:left;margin-left:20px" >');					content.push('<a href="#stAnswera' + id							+ '" role="tab" data-id="' + id							+ '" data-toggle="tab" class="tab' + id							+ '">考生答案</a></li>');					content.push('<li class="active"><a href="#riAnswer' + id							+ '" role="tab" data-id="' + id							+ '" data-toggle="tab" >参考答案</a></li>');					content.push('<li class="stu_answer_content">');					content							.push('<span style="padding-left:20px;back">&nbsp;&nbsp;考生用时：</span><span>'									+ answer_time									+ '</span>，<span>平均用时：</span><span style="padding-right:20px">'									+ avg_time + '</span></li>');					content.push('</ul>');					content							.push('<div class="tab-content"><div class="tab-pane active" id="stAnswera'									+ id									+ '"><div class="mymirror mirror'									+ id									+ '"></div><br></div>');					content.push('<div class="tab-pane active" id="riAnswer'							+ id + '"><div class="mymirror mirrorr' + id							+ '"></div></div></div></li><br><br>');					content.push('</div>');					$baiyiSystem.append(content.join(""));				} else {					var content = [];					content.push('<span class="skill_name_sys">语言：' + mode							+ '</span>');					content.push('<div class="bs-callout bs-callout-info">');					content.push('<li class=""><label class=""><br>');					content							.push('<span style="font-size: 17pt;color:rgb(66,139,202)">'									+ (titleIndex++) + '、</span>');					content.push('' + title + '</label></li>');					content							.push('<li><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="stu_answer_content_score"><div><span class="label label-warning sysScore" style="position: absolute;left:0;height:20px;line-height:20px">'									+ score + '分</span>');					if ($thispart[i].readonly == false) {						content								.push('<a class="change_rel_score" ><i class="fa fa-pencil"></i> 修改打分</a>');					}					content.push('</div>');					content							.push('<div style="display:none"><input class="form-control" type="text" style="width: 160px;display:inline-block;" placeholder="范围:0-10 精度:0.1"/><button data-name="system" class="btn btn-info btn-sm grading-save ml10" disabled="disabled" value='									+ $thispart[i].questionId									+ '>保存</button><button class="btn btn-default btn-sm grading-cancel ml10">取消</button></div>');					content.push('</li><br><br><br>');					content							.push('<li style="margin-top:-20px;width:100%"><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li style="margin-left:20px">');					content.push('<a href="#stAnswerb' + id							+ '" role="tab" data-id="' + id							+ '" data-toggle="tab" class="tab' + id							+ '">考生答案</a></li>');					content.push('<li class="active"><a href="#riAnswera' + id							+ '" role="tab" data-id="' + id							+ '" data-toggle="tab" >参考答案</a></li>');					content.push('<li class="stu_answer_content">');					content							.push('<span style="padding-left:20px;">考生用时：</span><span>'									+ answer_time									+ '</span>，<span>平均用时：</span><span style="padding-right:20px">'									+ avg_time + '</span></li>');					content.push('</ul>');					content							.push('<div class="tab-content"><div class="tab-pane active" id="stAnswerb'									+ id									+ '"><div class="mymirror mirror'									+ id									+ '"></div><br></div>');					content.push('<div class="tab-pane active" id="riAnswera'							+ id + '"><div class="mymirror mirrorr' + id							+ '"></div></div></div></li><br><br>');					content.push('</div>');					$baiyiSystem.append(content.join(""));				}				this.mirrors['mirror' + id] = CodeMirror($('.mirror' + id).get(						0), { // $place.get(0):					// 页面的一个dom元素，一遍是一个div					// 或者 textarea					value : $thispart[i].answer, // 内容					lineNumbers : true, // 行号					lineWrapping : false, // 是否换行，还是出现横向滚动条					styleActiveLine : false,					tabSize : '4',					indentUnit : '4',					readOnly : true				});				this.mirrors['mirrorr' + id] = CodeMirror($('.mirrorr' + id)						.get(0), { // $place.get(0):					// 页面的一个dom元素，一遍是一个div					// 或者					// textarea					value : ref_answer, // 内容					lineNumbers : true, // 行号					lineWrapping : false, // 是否换行，还是出现横向滚动条					styleActiveLine : false,					tabSize : '4',					indentUnit : '4',					readOnly : true				});				if (mode) {					var Mode = modemapping[mode];					if (Mode) {						// 默认已加载JS						this.mirrors['mirror' + id]								.setOption('mode', Mode.mode);						this.mirrors['mirrorr' + id].setOption('mode',								Mode.mode);						// 还未加载js						var jses = [];						for ( var j = 0; j < Mode.path.length; j++) {							jses.push(modeURL.replace(/%N/g, Mode.path[j]));						}						(function(opts) {							$LAB.script(jses).wait(									function() {										that.mirrors['mirror' + opts.id]												.setOption('mode', opts.mode);										that.mirrors['mirrorr' + opts.id]												.setOption('mode', opts.mode);									});							$('#systemcontent').find('.tab' + id + '').click();						})({							id : id,							mode : Mode.mode						});					}				}			}		},		additionSystem : function(datas, z) {			var $content = $('.systemcontent');			var $thispart = datas.parts[z].partItems;			var bysystemIndex = 1;			for ( var i = 0; i < $thispart.length; i++) {				var id = Math.guid();				var answer_time = $.sets_prettyTime($thispart[i].answerTime);				var avg_time = $.sets_prettyTime($thispart[i].avgAnswerTime);				var title = $thispart[i].title.replace(/\n/g, "<br>");				var ref_answer = "";				var answer = ""				if ($thispart[i].refAnswer) {					ref_answer = $thispart[i].refAnswer;				} else {					ref_answer = "无";				}				if ($thispart[i].answer) {					answer = $thispart[i].answer;				} else {					answer = "无";				}				var score = $thispart[i].score;				var mode = $thispart[i].mode.toLowerCase();				if (score || score == 0) {					score = $thispart[i].score;				} else {					score = "未评";				}				if ($thispart[i].prebuilt == true) {					var content = [];					if (mode) {						content.push('<span class="skill_name_sys">语言：' + mode								+ '</span>');					}					content.push('<div class="bs-callout bs-callout-info">');					content.push('<li class=""><label class="">');					content							.push('<p style="margin-left:20px;width:97%"><span style="font-size: 17pt;color:rgb(66,139,202)">'									+ (titleIndex++) + '、</span>');					content.push('' + title + '</p></label></li>');					content							.push('<li><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="stu_answer_content_score"><span class="label label-warning sysScore">'									+ score + '分</span></li>');					content							.push('<li class="active" style="margin-left:20px;width:100%">');					content.push('<a href="#stAnswerc' + id							+ '" role="tab" data-toggle="tab">考生答案</a></li>');					content.push('<li><a href="#riAnswerc' + id							+ '" role="tab" data-toggle="tab">参考答案</a></li>');					content.push('<li class="">');					content							.push('<span style="padding-left:20px;">&nbsp;&nbsp;考生用时：</span><span>'									+ answer_time									+ '</span>，<span>平均用时：</span><span style="padding-right:20px">'									+ avg_time + '</span></li>');					content.push('</ul>');					content							.push('<div class="tab-content"><div class="tab-pane active" id="stAnswerc'									+ id									+ '"><div class="mirror'									+ id									+ '">'									+ answer + '</div><br></div>');					content.push('<div class="tab-pane " id="riAnswerc' + id							+ '"><div class="student_answer_content mirrorr'							+ id + '">' + ref_answer							+ '</div></div></div></li><br><br>');					content.push('</div>');					$content.append(content.join(""));				} else {					var content = [];					if (mode) {						content.push('<span class="skill_name_sys">语言：' + mode								+ '</span>');					}					content.push('<div class="bs-callout bs-callout-info">');					content.push('<li class=""><label class="">');					content							.push('<p style="margin-left:20px;width:97%"><span style="font-size: 17pt;color:rgb(66,139,202)">'									+ (titleIndex++) + '、</span>');					content.push('' + title + '</p></label></li>');					content							.push('<li><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="stu_answer_content_score"><div><span class="label label-warning sysScore" style="position: absolute;left:0;height:20px;line-height:20px">'									+ score + '分</span>');					if ($thispart[i].readonly == false) {						content								.push('<a class="change_rel_score" ><i class="fa fa-pencil"></i> 修改打分</a>');					}					content.push('</div>');					content							.push('<div style="display:none"><input class="form-control" type="text" style="width: 160px;display:inline-block;" placeholder="范围:0-10 精度:0.1"/><button data-name="addsystem" class="btn btn-info btn-sm grading-save ml20" disabled="disabled" value='									+ $thispart[i].questionId									+ '>保存</button><button class="btn btn-default btn-sm grading-cancel ml10">取消</button></div>');					content.push('</li><br><br><br>');					content							.push('<li style="margin-top:-20px;width:100%"><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="active" style="margin-left:20px">');					content.push('<a href="#stAnswerd' + bysystemIndex							+ '" role="tab" data-toggle="tab">考生答案</a></li>');					content.push('<li><a href="#riAnswerb' + bysystemIndex							+ '" role="tab" data-toggle="tab">参考答案</a></li>');					content.push('<li class="stu_answer_content">');					content							.push('<span style="padding-left:20px;back">考生用时：</span><span>'									+ answer_time									+ '</span>，<span>平均用时：</span><span style="padding-right:20px">'									+ avg_time + '</span></li>');					content.push('</ul>');					content							.push('<div class="tab-content"><div class="tab-pane active" id="stAnswerd'									+ bysystemIndex									+ '"><div class=" mirror'									+ id + '"></div><br></div>');					content.push('<div class="tab-pane " id="riAnswerb'							+ bysystemIndex++ + '"><div class=" mirrorr' + id							+ '"></div></div></div></li><br><br>');					content.push('</div>')					$content.append(content.join(""));				}				var _mirror = CodeMirror($('.mirror' + id).get(0), { // $place.get(0):					// 页面的一个dom元素，一遍是一个div					// 或者 textarea					value : answer, // 内容					lineNumbers : true, // 行号					lineWrapping : false, // 是否换行，还是出现横向滚动条					styleActiveLine : false,					tabSize : '4',					indentUnit : '4',					readOnly : true				});				var _mirror_right = CodeMirror($('.mirrorr' + id).get(0), { // $place.get(0):					// 页面的一个dom元素，一遍是一个div					// 或者					// textarea					value : ref_answer, // 内容					lineNumbers : true, // 行号					lineWrapping : false, // 是否换行，还是出现横向滚动条					styleActiveLine : false,					tabSize : '4',					indentUnit : '4',					readOnly : true				});				if (mode) {					var Mode = modemapping[mode];					if (Mode) {						// 默认已加载JS						_mirror.setOption('mode', Mode.mode);						_mirror_right.setOption('mode', Mode.mode);						// 还未加载js						var jses = [];						for ( var j = 0; j < Mode.path.length; j++) {							jses.push(modeURL.replace(/%N/g, Mode.path[j]));						}						$LAB.script(jses).wait(function() {							_mirror.setOption('mode', Mode.mode);							_mirror_right.setOption('mode', Mode.mode);						});					}				}				$('.report_content').find('a[data-toggle="tab"]').on(						'shown.bs.tab', function(e) {							_mirror.refresh();							_mirror_right.refresh();						});			}		},		iqQuestion : function(datas, z) {			var $content = $('.report_content');			var iq = datas.parts[z].partItems;			var bysystemIndex = 1;			var $baiyiSystem = $('.report_content');			$baiyiSystem					.append('<div id="iq" class="parttitle">智力题<span  class="iqAvgScore">平均分：0</span><div class="my-col-12"><div class="my-col-6" id="intelSkill"></div><div class="my-col-6" id="intelTime"></div></div></div>');			for ( var i = 0; i < iq.length; i++) {				var title = iq[i].title.replace(/\n/g, "<br>");				var answer_time = $.sets_prettyTime(iq[i].answerTime);				var avg_time = $.sets_prettyTime(iq[i].avgAnswerTime);				var score = iq[i].score;				var mode = iq[i].mode;				if(iq[i].skillName){					var qbName = iq[i].skillName;				}				var answer = "";				var ref_answer = "";				var optAnswer = "";				var option = 0;				var ref_option = [];				var optOption = 0;				var opt_option = [];				if (iq[i].optAnswer) {					optAnswer = iq[i].optAnswer;				} else {					optAnswer = "";				}				if (iq[i].answer) {					answer = iq[i].answer;				}				if (iq[i].refAnswer) {					ref_answer = iq[i].refAnswer;				} else {					ref_answer = "";				}				if (score || score == 0) {					score = iq[i].score;				} else {					score = "未评";				}				if (!mode) {					mode = "无";				}				if (iq[i].optRefAnswer) {					var optRefAnswers = iq[i].optRefAnswer.split("");					for ( var h = 0; h < optRefAnswers.length; h++) {						switch (optRefAnswers[h]) {						case "A":							option = 0;							break;						case "B":							option = 1;							break;						case "C":							option = 2;							break;						case "D":							option = 3;							break;						case "E":							option = 4;							break;						case "F":							option = 5;							break;						}						for ( var y = 0; y < iq[i].options.length; y++) {							if (y == option) {								ref_option.push(iq[i].options[y]);							}						}					}				}				if (iq[i].optAnswer) {					var optAnswers = iq[i].optAnswer.split("");					for ( var f = 0; f < optAnswers.length; f++) {						switch (optAnswers[f]) {						case "A":							optOption = 0;							break;						case "B":							optOption = 1;							break;						case "C":							optOption = 2;							break;						case "D":							optOption = 3;							break;						case "E":							optOption = 4;							break;						case "F":							optOption = 5;							break;						}						for ( var e = 0; e < iq[i].options.length; e++) {							if (e == optOption) {								opt_option.push(iq[i].options[e]);							}						}					}				}				// 判断智力题的类型 questionType 5 问答类型 7,8选择题				if (iq[i].questionType == 7 || iq[i].questionType == 8						|| iq[i].questionType == 1 || iq[i].questionType == 2) {					var content = [];					content							.push('<div class="bs-callout bs-callout-info"><div style="margin-left:20px">');					content							.push('<span style="font-size: 17pt;color:rgb(66,139,202)">'									+ (i + 1) + '、');					if(qbName){						content.push('<span style="font-size:13pt;display:inline-block">['+qbName+']</span></span><br>');					}else{						content.push('</span>');					}					content.push('' + title + '</div></li>');					content							.push('<li><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="stu_answer_content_score"><div><span class="label label-warning iqScore" style="position: absolute;left:0;height:20px;line-height:20px">'									+ score + '分</span>');					if (iq[i].readonly == false) {						content								.push('<a class="change_rel_score" ><i class="fa fa-pencil"></i> 修改打分</a>');					}					content.push('</div>');					content							.push('<div style="display:none"><input class="form-control" type="text" style="width: 160px;display:inline-block;" placeholder="范围:0-10 精度:0.1"/><button data-name="iq" class="btn btn-info btn-sm grading-save ml10" disabled="disabled" value='									+ iq[i].questionId									+ '>保存</button><button class="btn btn-default btn-sm grading-cancel ml10">取消</button></div>');					content.push('</li><br><br><br>');					content							.push('<li style="margin-top:-20px"><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="active" style="margin-left:20px">');					content.push('<a href="#stAnswerq' + bysystemIndex							+ '" role="tab" data-toggle="tab">考生答案</a></li>');					content.push('<li style="float:left"><a href="#riAnswerq'							+ bysystemIndex							+ '" role="tab" data-toggle="tab">参考答案</a></li>');					content.push('<li class="stu_answer_content">');					content							.push('<span style="padding-left:20px;back">考生用时：</span><span>'									+ answer_time									+ '</span>，<span>平均用时：</span><span style="padding-right:20px">'									+ avg_time + '</span></li>');					content.push('</ul>');					content							.push('<div class="tab-content"><div class="tab-pane active" id="stAnswerq'									+ bysystemIndex									+ '"><div class="student_answer_content" style="height:auto !important;width:auto !important">');					for ( var b = 0; b < opt_option.length; b++) {						content.push(opt_option[b]);					}					content.push("<br>");					if (answer != "") {						content.push(answer);					}					content.push('</div><br></div>');					content							.push('<div class="tab-pane " id="riAnswerq'									+ bysystemIndex++									+ '"><div class="" style="height:auto !important;width:auto !important;padding-left:30px;padding-top:10px;">');					for ( var u = 0; u < ref_option.length; u++) {						content.push(ref_option[u]);					}					content.push("<br>");					if (ref_answer) {						content.push(ref_answer);					}					content.push('</div><br></div></div></li>');					$content.append(content.join(""));				} else if (iq[i].questionType == 5) {					var content = [];					content							.push('<div class="bs-callout bs-callout-info"><div style="margin-left:20px">');					content							.push('<span style="font-size: 17pt;color:rgb(66,139,202)">'									+ (i + 1) + '、');					if(qbName){						content.push('<span style="font-size:13pt;display:inline-block">['+qbName+']</span></span><br>');					}else{						content.push('</span>');					}					content.push('' + title + '</div></li>');					content							.push('<li><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="stu_answer_content_score"><div><span class="label label-warning iqScore" style="position: absolute;left:0;height:20px;line-height:20px">'									+ score + '分</span>');					if (iq[i].readonly == false) {						content								.push('<a class="change_rel_score" ><i class="fa fa-pencil"></i> 修改打分</a>');					}					content.push('</div>');					content							.push('<div style="display:none"><input class="form-control" type="text" style="width: 160px;display:inline-block;" placeholder="范围:0-10 精度:0.1"/><button data-name="iq" class="btn btn-info btn-sm grading-save ml10" disabled="disabled" value='									+ iq[i].questionId									+ '>保存</button><button class="btn btn-default btn-sm grading-cancel ml10">取消</button></div>');					content.push('</li><br><br><br>');					content							.push('<li style="margin-top:-20px"><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="active" style="margin-left:20px">');					content.push('<a href="#stAnswerm' + bysystemIndex							+ '" role="tab" data-toggle="tab">考生答案</a></li>');					content.push('<li><a href="#riAnswern' + bysystemIndex							+ '" role="tab" data-toggle="tab">参考答案</a></li>');					content.push('<li class="stu_answer_content">');					content							.push('<span style="padding-left:20px;back">考生用时：</span><span>'									+ answer_time									+ '</span>，<span>平均用时：</span><span style="padding-right:20px">'									+ avg_time + '</span></li>');					content.push('</ul>');					content							.push('<div class="tab-content"><div class="tab-pane active" id="stAnswerm'									+ bysystemIndex									+ '"><div class="student_answer_content" style="padding:10px;height:auto !important;width:auto !important">'									+ answer + '</div></div>');					content							.push('<div class="tab-pane " id="riAnswern'									+ bysystemIndex++									+ '"><div class="" style="padding:10px;height:auto !important;width:auto !important;padding-left:30px">'									+ ref_answer									+ '</div></div></div></li><br>');					$baiyiSystem.append(content.join(""));				}			}		},		videoPart : function(datas) {			var that = this;			var $content = $('.report_content');			$content					.append('<div id="video" class="parttitle">面试题</div><div  class="video_list gone"><div class="interview_topics bs-callout bs-callout-info"></div></div>');			var showVideos = false;			if (datas.videos && datas.videos.length > 0) {				showVideos = true;			}			if (showVideos) {				var videos = datas.videos || [];				if (videos.length > 0) {					$('.video_list').show();					var items = [];					for ( var i = 0; i < videos.length; i++) {						var topic = videos[i];						var hasAnswer = topic.url && (topic.url != '');						if (hasAnswer) {							items.push('<button data-url="' + topic.url + '" ');							items.push('title="点击播放候选人答题视频" ');						} else {							items.push('<button ');							items.push('title="候选人没有回答该问题" ');						}						items								.push('class="text-left button button-rounded button-flat">');						items.push('<span class="fa-stack fa-sm">');						items								.push('<i class="fa fa-video-camera fa-stack-1x"></i>');						if (!hasAnswer) {							items									.push('<i class="fa fa-ban fa-stack-2x text-danger"></i>');						}						items.push('</span>');						items.push(' ' + topic.title);						items.push('</button>');					}					$('.video_list .interview_topics').html(items.join(''));					$('.video_list .interview_topics button').tooltip({						placement : 'right'					});					var $videoModal = $('#interview_video');					$('.video_list .interview_topics')							.on(									'click',									'button',									function() {										var url = $(this).data('url');										if (url) {											// 不encode											var parts = url.split('Signature=');											if (parts.length == 2) {												url = parts[0]														+ 'Signature='														+ encodeURIComponent(parts[1]);											}											$videoModal.find('.modal-title')													.text($(this).text());											$("#video_player")													.attr("href", url);											flowplayer(													"video_player",													root															+ '/plugin/flowplayer/flowplayer-3.2.18.swf',													{														plugins : {															controls : {																bottom : 0,// 功能条距底部的距离																height : 24, // 功能条高度																zIndex : 1,																fontColor : '#ffffff',																timeFontColor : '#333333',																playlist : true,// 上一个、下一个按钮																play : true, // 开始按钮																volume : true, // 音量按钮																mute : true, // 静音按钮																stop : true,// 停止按钮																fullscreen : true, // 全屏按钮																scrubber : true,// 进度条																url : root																		+ "/plugin/flowplayer/flowplayer.controls-3.2.16.swf", // 决定功能条的显示样式（功能条swf文件,根据项目定亦可引用:http://releases.flowplayer.org/swf/flowplayer.controls-3.2.12.swf）																time : true, // 是否显示时间信息																autoHide : true, // 功能条是否自动隐藏																buttonColor : 'rgba(51, 51, 51, 1)',																buttonOverColor : '#0687d1',																// backgroundGradient:																// 'medium',																sliderColor : '#333333',																//								                         																sliderBorder : '1px solid #333333',																volumeSliderColor : '#333333',																volumeBorder : '1px solid #333333',																//								                         																timeColor : '#000000',																durationColor : '#333333',																//								                        																	tooltipColor : 'rgba(51, 51, 51, 1)',																tooltipTextColor : '#0687d1',																backgroundColor : '#d0d0d0', // 背景颜色																backgroundGradient : [																		1.0,																		1.0,																		1.0 ], // 背景颜色渐变度（等分的点渐变）																opacity : 0.5, // 功能条的透明度																tooltips : {																	buttons : true,// 是否显示																	fullscreen : '全屏',// 全屏按钮，鼠标指上时显示的文本																	stop : '停止',																	play : '开始',																	volume : '音量',																	mute : '静音',																	next : '下一个',																	previous : '上一个'																}															}														}													});											$videoModal.show();											// $videoModal.modal();											$videoModal.find('.close').click(													function() {														$videoModal.hide();													});											$videoModal.find('.i-skill-mask')													.click(function() {														$videoModal.hide();													});										}									});				}			}		},		questionAnswer : function(datas, z) {			var $content = $('.report_content');			var iq = datas.parts[z].partItems;			var bysystemIndex = 1;			var $baiyiSystem = $('.report_content');			$baiyiSystem					.append('<div id="essays" class="parttitle">技能问答<span class="iqAvgScore">平均分：0</span></div><br>');			for ( var i = 0; i < iq.length; i++) {				var title = iq[i].title.replace(/\n/g, "<br>");				var answer_time = $.sets_prettyTime(iq[i].answerTime);				var avg_time = $.sets_prettyTime(iq[i].avgAnswerTime);				var score = iq[i].score;				var mode = iq[i].mode;				var answer = "";				var ref_answer = "";				var optAnswer = "";				if (iq[i].optAnswer) {					optAnswer = iq[i].optAnswer.replace(/\n/g, "<br>");				} else {					optAnswer = "无";				}				if (iq[i].answer) {					answer = iq[i].answer.replace(/\n/g, "<br>");				} else {					answer = "无";				}				if (iq[i].refAnswer) {					ref_answer = iq[i].refAnswer.replace(/\n/g, "<br>");				} else {					ref_answer = "无";				}				if (score || score == 0) {					score = iq[i].score;				} else {					score = "未评";				}				if (!mode) {					mode = "无";				}				// 判断问答题的类型 questionType 5 问答类型 7,8选择题				if (iq[i].questionType == 7 || iq[i].questionType == 8) {					var content = [];					content							.push('<div class="bs-callout bs-callout-info"><div style="margin-left:20px">');					content							.push('<span style="font-size: 17pt;color:rgb(66,139,202)">'									+ (i + 1) + '、</span>');					content.push('' + title + '</div></li>');					content							.push('<li><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="stu_answer_content_score"><div><span class="label label-warning aqscore" style="position: absolute;left:0;height:20px;line-height:20px">'									+ score + '分</span>');					if (iq[i].readonly == false) {						content								.push('<a class="change_rel_score" ><i class="fa fa-pencil"></i> 修改打分</a>');					}					content.push('</div>');					content							.push('<div style="display:none"><input class="form-control" type="text" style="width: 160px;display:inline-block;" placeholder="范围:0-10 精度:0.1"/><button data-name="qa" class="btn btn-info btn-sm grading-save ml10" disabled="disabled" value='									+ iq[i].questionId									+ '>保存</button><button class="btn btn-default btn-sm grading-cancel ml10">取消</button></div>');					content.push('</li><br><br><br>');					content							.push('<li style="margin-top:-20px;width:100%"><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="active" style="margin-left:20px">');					content.push('<a href="#stAnswerq' + bysystemIndex							+ '" role="tab" data-toggle="tab">考生答案</a></li>');					content.push('<li><a href="#riAnswerq' + bysystemIndex							+ '" role="tab" data-toggle="tab">参考答案</a></li>');					content.push('<li class="stu_answer_content">');					content							.push('<span style="padding-left:20px;back">考生用时：</span><span>'									+ answer_time									+ '</span>，<span>平均用时：</span><span style="padding-right:20px">'									+ avg_time + '</span></li>');					content.push('</ul>');					content							.push('<div class="tab-content"><div class="tab-pane active" id="stAnswerq'									+ bysystemIndex									+ '"><div class="tabpadding" style="height:auto;width:auto">'									+ optAnswer + '</div><br></div>');					content							.push('<div class="tab-pane " id="riAnswerq'									+ bysystemIndex++									+ '"><div class="tabpadding" style="height:auto !important;width:auto">'									+ ref_answer									+ '</div><br></div></div></li>');					$content.append(content.join(""));				} else if (iq[i].questionType == 5) {					var content = [];					content							.push('<div class="bs-callout bs-callout-info"><div style="margin-left:20px">');					content							.push('<span style="font-size: 17pt;color:rgb(66,139,202)">'									+ (i + 1) + '、</span>');					content.push('' + title + '</div></li>');					content							.push('<li><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="stu_answer_content_score"><div><span class="label label-warning sysScore aqscore" style="position: absolute;left:0;height:20px;line-height:20px">'									+ score + '分</span>');					if (iq[i].readonly == false) {						content								.push('<a class="change_rel_score" ><i class="fa fa-pencil"></i> 修改打分</a>');					}					content.push('</div>');					content							.push('<div style="display:none"><input class="form-control" type="text" style="width: 160px;display:inline-block;" placeholder="范围:0-10 精度:0.1"/><button class="btn btn-info btn-sm grading-save ml10" disabled="disabled" value='									+ iq[i].questionId									+ '>保存</button><button class="btn btn-default btn-sm grading-cancel ml10">取消</button></div>');					content.push('</li><br><br><br>');					content							.push('<li style="margin-top:-20px"><ul class="nav nav-tabs" role="tablist" style="margin-top:10px"><li class="active" style="margin-left:20px">');					content.push('<a href="#stAnswerb' + bysystemIndex							+ '" role="tab" data-toggle="tab">考生答案</a></li>');					content.push('<li><a href="#riAnswera' + bysystemIndex							+ '" role="tab" data-toggle="tab">参考答案</a></li>');					content.push('<li class="stu_answer_content">');					content							.push('<span style="padding-left:20px;back">考生用时：</span><span>'									+ answer_time									+ '</span>，<span>平均用时：</span><span style="padding-right:20px">'									+ avg_time + '</span></li>');					content.push('</ul>');					content							.push('<div class="tab-content"><div class="tab-pane active" id="stAnswerb'									+ bysystemIndex									+ '"><div class="tabpadding" style="height:auto !important;width:auto">'									+ answer + '</div><br></div>');					content							.push('<div class="tab-pane " id="riAnswera'									+ bysystemIndex++									+ '"><div class="tabpadding" style="height:auto !important;width:auto"">'									+ ref_answer									+ '</div></div></div></div><br><br>');					$baiyiSystem.append(content.join(""));				}			}		},		bindEvent : function($this) {			$('.change_rel_score').click(function() {				$(this).parent().next().show();				$(this).parent().hide();			});			$('.grading-save').click(					function() {						var that = $(this);						var questionId = $(this).val();						var score = $(this).prev().val();						var success = true;						var datas = {							anchor : -1,							questionId : questionId,							score : score,							testId : TEST_ID						};						$.setsAjax({							url : root + "/sets/report/scoreQuestion",							type : "post",							data : datas,							beforeSend : function() {								that.attr("disabled", "disabled").text(										"保存中....");							},							success : function(result) {								if (result.code == 0) {									success = false;									that.parent().prev().find('span').text(											that.prev().val() + "分");								}							},							complete : function() {								if (success == true) {									setTimeout(function() {										that.text("保存失败");										setTimeout(function() {											that.removeAttr("disabled").text(													"保存");										}, 1000)									}, 3000);								} else {									success = true;									that.parent().hide();									that.parent().prev().show();									that.text("保存");									$this.score();									var relname = that.data("name");									var div = "";									var score = "";									switch (relname) {									case "system":										relname = "编程题";										div = 1;										score = $('.sysAvgScore').text().split(												"：")[1].split("分")[0];										break;									case "addsystem":										relname = "附加编程";										div = 4;										score = $('.sysAvgScore').text().split(												"：")[1].split("分")[0];										break;									case "iq":										relname = "智力题";										div = 3;										score = $('.iqAvgScore').text().split(												"：")[1].split("分")[0];										break;									}									scoreHighchars											.myreload(div, relname, score);								}							}						})					});			$('.grading-cancel').click(function() {				$(this).parent().hide();				$(this).parent().prev().show();			});			$('.form-control').keyup(function() {				var $this = $(this);				if ($this.val() >= 0 && $this.val() <= 10) {					$this.next().removeAttr("disabled");				} else {					$this.next().attr("disabled", "disabled");				}			});			$('.floatSkill >a').click(function() {				$('.floatSkill').removeClass("skill_background");				$(this).parent().addClass("skill_background");			});		},		// 计算平均分部分		score : function() {			// 智力题部分			var iq = [];			var iqscore = 0;			$('.iqScore').each(function() {				if ($(this).text() != "未评分") {					iq.push($(this).text().replace("分", ""))				}			});			if (iq != "") {				for ( var i = 0; i < iq.length; i++) {					var iqtotal = iq[i];					iqscore = iqtotal * 1 + iqscore * 1;				}				var iqavgscore = iqscore / iq.length;				iqavgscore = iqavgscore.toFixed(1);				$('.iqAvgScore').text("平均得分：" + iqavgscore + "分");			} else {				$('.iqAvgScore').text("平均得分：0分");			}			// 问答题			var aq = [];			var aqscore = 0;			$('.aqscore').each(function() {				if ($(this).text() != "未评分") {					aq.push($(this).text().replace("分", ""))				}			});			if (aq != "") {				for ( var i = 0; i < aq.length; i++) {					var aqtotal = aq[i];					aqscore = aqtotal * 1 + aqscore * 1;				}				var aqavgscore = aqscore / aq.length;				aqavgscore = aqavgscore.toFixed(1);				$('.aqAvgScore').text("平均得分：" + aqavgscore + "分");			} else {				$('.aqAvgScore').text("平均得分：0分");			}			// 编程题部分			var system = [];			var sysscore = 0;			$('.sysScore').each(function() {				if ($(this).text() != "未评分") {					system.push($(this).text().replace("分", ""))				}			});			if (system != "") {				for ( var i = 0; i < system.length; i++) {					var systotal = system[i];					sysscore = systotal * 1 + sysscore * 1;				}				var sysavgscore = sysscore / system.length;				sysavgscore = sysavgscore.toFixed(1);				$('.sysAvgScore').text("平均得分：" + sysavgscore + "分");			} else {				$('.sysAvgScore').text("平均得分：0分");			}			if (PASSPORT) {				$('.change_rel_score').hide();				$('#hr_score_btn').show();			}		}	};// END getView			function intelSkill(data){			var plotBands = [];			var G_techBaseData = null;			G_techBaseData = (function() { // 剔除不含试题的标签				var skills = [];				var scores = [];				if (data.completion						&& data.completion.intelSkillRatios) {					$('.tech-base-analysis').show();					var r = data.completion.intelSkillRatios;					for ( var i = 0; i < r.length; i++) {						if (r[i] != 0) {							skills.push(data.summary.intelSkills[i]);							scores									.push(data.summary.intelSkillScores[i]);						}					}					return {						skills : skills,						scores : scores					};				}				return {					skills : data.summary.intelSkills,					scores : data.summary.intelSkillScores				}			})()			data.summary.intelScoreRanges.push(10);			var zColor = Highcharts.Color('#ECF0F5')					.brighten(0.05).get();			for ( var i = 0; i < meta.levels.length; i++) {				var level = meta.levels[i];				plotBands.push({					from : data.summary.intelScoreRanges[i],					to : data.summary.intelScoreRanges[i + 1],					color : i % 2 == 0 ? '#ECF0F5'							: zColor,					label : {						text : level,						style : {							color : '#606060'						}					}				});			}			// 根据分值判断所在区间			var belongRange = function(score) {				for ( var i = 1; i < data.summary.intelScoreRanges.length; i++) {					if (score < data.summary.intelScoreRanges[i]) {						return meta.levels[i - 1];					}				}				return meta.levels[meta.levels.length - 1];			};			var tooltipColors = [ '#3498DB', '#FA4444',					'#3EBFBE' ];						$('#intelSkill')					.highcharts(							{								title : {									text : ''								},								credits : {									enabled : false								},								xAxis : [ {									tickWidth : 0,									lineWidth : 1,									categories : G_techBaseData.skills								} ],								yAxis : {									tickPositions : data.summary.intelScoreRanges,									min : 0,									max : meta.max,									title : {										text : null									},									labels : {										formatter : function() {											return '';										}									},									gridLineWidth : 0,									alternateGridColor : null,									plotBands : plotBands								},								tooltip : {									shared : true,									formatter : function() {										var result = [];										result.push[this.x];										for ( var i = 0; i < this.points.length; i++) {											var point = this.points[i];											result													.push(point.series.name															+ ': <span style="color:'															+ tooltipColors[i]															+ '">'															+ belongRange(point.y)															+ '</span>');										}										return result												.join('<br/>');									}								},								legend : {									// layout :									// 'vertical',									// align : 'right',									// x : 0,									verticalAlign : 'bottom'								// y : 0,								// floating : true,								// backgroundColor :								// '#FFFFFF'								},								series : [ {									type : 'bar',									name : '掌握程度',									color : 'rgba(102, 153, 204, 0.5)',									data : G_techBaseData.scores								} /*									 * , { type :									 * 'line', name :									 * '平均程度', color :									 * '#FA4444', data :									 * summary.avgScores }									 */]							});						if (result.completion && G_techBaseData					&& result.completion.intelSkillRatios) {				// 1.数据整理				var tagData = [], testData = [], testOData = [];				var len = meta.colors.length;				for ( var i = 0; i < data.completion.intelSkillRatios.length; i++) {					if (data.completion.intelSkillRatios[i] != 0) {						tagData.push({							name : data.summary.intelSkills[i],							y : data.completion.intelSkillRatios[i],							color : meta.colors[i % len]						});					}				}				var graph_analysis1_index = 0;				// 2.创建图表				$('#intelTime')						.highcharts(								{									credits : {										enabled : false									},									chart : {										type : 'pie'									},									title : {										text : '<div style="color:rgb(52, 152, 219);text-align:center;">作答时间<p style="color: #FF7F1C;font-size: 1em;">'												+ $														.sets_prettyTime(data.completion.intelSpentTime)												+ '</p><div>',										align : 'center',										verticalAlign : 'middle',										useHTML : true,										y : -15,									},									plotOptions : {										pie : {											center : [ '50%',													'50%' ]										}									},									tooltip : {										enabled : false									},									series : [ {										name : 'skills',										data : tagData,										size : '40%',										innerSize : '30%',										dataLabels : {											formatter : function() {												var index = graph_analysis1_index++;												return this.point.name														+ ': '														+ '<span style="color:'														+ this.point.color														+ ';">占'														+ Math																.round(this.point.y * 100)														+ '%</span>'														+ '<br/>作答时间: '														+ '<span style="color:'														+ this.point.color														+ ';">'														+ $																.sets_prettyTime(data.completion.intelSkillTimes[index])														+ '</span>'														+ '<br/>平均作答时间: '														+ '<span style="color:'														+ this.point.color														+ ';">'														+ $																.sets_prettyTime(data.completion.intelAvgSkillTimes[index]);											}										}									} ]								});			}		}			});