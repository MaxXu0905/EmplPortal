$(function($) {	"use strict";	$LAB			.script(root + "/plugin/posfixed.js")			.script(root + "/plugin/bootstrapx-popoverx.js")			.script(root + "/plugin/Highcharts-3.0.9/js/highcharts.js")			.script(root + "/plugin/spin.min.js")			.script(root + "/plugin/jquery.isotope.js")			.script(root + "/plugin/imagesloaded.pkgd.min.js")			.script(root + "/plugin/jquery.timelinr-0.9.3.js")			.wait(					function() {						/** ******* 加载模态 ************* */						var modalWaiting = {							$modalHint : $('#modal_waiting'),							$spinner : $('#modal_waiting .spinner'),							init : function() {								var _this = this;								this.$modalHint.modal({									backdrop : 'static',									keyboard : false,									show : false								});								this.$modalHint.on('shown.bs.modal', function(e) {									_this.$spinner.spin({										corners : 1,										direction : 1,										hwaccel : false,										length : 15,										lines : 12,										radius : 20,										rotate : 0,										shadow : false,										speed : 1,										trail : 61,										width : 8,										left : 150,										top : -40									});								});								this.$modalHint.on('hide.bs.modal', function(e) {									_this.$spinner.spin(false);								});							},							show : function(title, selector, trigger, funct) {								var _this = this;								this.$modalHint.find('.title').html(title);								this.$modalHint.modal('show');								if (selector && funct) {									this.$modalHint.on(trigger, selector, function(e) {										_this.$modalHint.off(trigger, selector);										funct(e);									});								}							},							hide : function(funct) {								var _this = this;								if (funct) {									this.$modalHint.on('hidden.bs.modal', function(e) {										_this.$modalHint.off('hidden.bs.modal');										funct(e);									});								}								this.$modalHint.modal('hide');							},							title : function(title) {								this.$modalHint.find('.title').html(title);							}						};						modalWaiting.init();						/** ****** 获取星星评分模板 ************ */						var Star = {							getStarTmpl : function(a) {								if (isNaN(a)) {									a = 0;								}								a = Math.round(a);								if (a < 0) {									a = 0;								}								if (a > 10) {									a = 10;								}								var items = [];								for ( var i = 0; i < 5; i++) {									if (a <= i * 2) {										items.push('<i class="fa fa-star-o"></i>')									} else if (a < (i + 1) * 2) {										items.push('<i class="fa fa-star-half-o"></i>');									} else {										items.push('<i class="fa fa-star"></i>');									}								}								return items.join('');							},							convertRatio : function(a) {								var intA = parseInt(a);								var decimalA = ((a - intA) * 10).toFixed(0);								var addA = 0;								if (decimalA <= 2) {									addA = 0;								} else if (decimalA <= 7) {									addA = 0.5								} else {									addA = 1;								}								return intA + addA;							}						}						/** 封装分页对象 */						function Pager(pageSize) {							this.pageSize = pageSize;							this.requestPage = 1; // start from 1							// 是否有更多数据，当返回结果集小于pageSize时设置为false							this.hasMore = true;						}						Pager.prototype.next = function() { // 下一页							this.requestPage++;						};						Pager.prototype.reset = function() { // 重置							this.requestPage = 1;							this.hasMore = true;						};						var toolbar = {							$wrapper : $('#wrapper'),							$paperModelBtn : $('#wrapper a.paper-model'),							$paperModelPane : $('.ghost-area'),							_paperModelLock : false,							$compareActiveBtn : $('#wrapper .compareBtn'),							$activityLineBtn : $('#wrapper a.activity-line'),							$activityLinePane : $('.ghost-area-activity'),							$timeline : $('#timeline'),							$dates : $('#dates'),							$issues : $('#issues'),							$passports : {}, // passport 							_activityReqLock : false,							init : function() {								var _this = this;								_this.onEvent()							},							onEvent : function() {								var _this = this;								/** 点击查看试卷模型 */								_this.$paperModelBtn.click(function() {									// 隐藏宣讲会									if (_this.$activityLinePane.is(':visible')) {										_this.$activityLineBtn.children('i').removeClass('fa-angle-up').addClass(												'fa-angle-down');										_this.$activityLinePane.slideUp('fast');									}								});								_this.$activityLineBtn.click(function() {									if (_this.$activityLinePane.is(':visible')) {										_this.$activityLineBtn.children('i').removeClass('fa-angle-up').addClass(												'fa-angle-down');										_this.$activityLinePane.slideUp('fast');									} else {										_this.$activityLineBtn.children('i').removeClass('fa-angle-down').addClass(												'fa-angle-up');										if (!_this._activityReqLock) {											_this._activityReqLock = true;											_this.loadActivityLine();										}										_this.$activityLinePane.slideDown('fast');									}									// 隐藏试卷模型									if (_this.$paperModelPane.is(':visible')) {										_this.$paperModelBtn.children('i').removeClass('fa-angle-up').addClass(												'fa-angle-down');										_this.$paperModelPane.slideUp('fast');									}								});							},							loadPaperModel : function() {								var _this = this;								var success = false;								$.setsAjax({									url : root + '/sets/report/getReportTemplateByPositionId/' + POSITION_ID,									type : 'post',									beforeSend : function() {										_this.$paperModelPane.find('.row').hide();										_this.$paperModelPane.find('.hint').text('正在加载试卷结模型...').show();										_this.$paperModelPane.find('.spin').html('').spin({											lines : 12,											length : 3,											color : '#FFF',											width : 2,											radius : 4,											corners : 1,											left : 10,											top : 0										}, '#000');									},									success : function(data) {										if (data.code == 0) {											_this.$paperModelPane.find('.row').fadeIn();											_this.$paperModelPane.find('.hint').hide();											_this.$paperModelPane.find('.spin').html('');											if (data.data) {												success = true;												_this.renderPaperModel(data.data);											}										}									},									error : function() {									},									complete : function() {										if (!success) {											_this.$paperModelPane.find('.row').hide();											_this.$paperModelPane.find('.hint').text('未获取到试卷结构比例信息').show();											_this.$paperModelPane.find('.spin').html('');											_this._paperModelLock = false;										}									}								});							},							loadActivityLine : function() {								var _this = this;								var success = false;								$.setsAjax({									url : root + '/sets/position/queryCampus/' + POSITION_ID,									type : 'post',									beforeSend : function() {										_this.$timeline.hide();										_this.$activityLinePane.find('.hint').text('正在加载宣讲会信息...').show();										_this.$activityLinePane.find('.spin').html('').spin({											lines : 12,											length : 3,											color : '#FFF',											width : 2,											radius : 4,											corners : 1,											left : 10,											top : 0										}, '#000');									},									success : function(data) {										if (data.code == 0) {											_this.$timeline.fadeIn();											_this.$activityLinePane.find('.hint').hide();											_this.$activityLinePane.find('.spin').html('');											if (data.data) {												success = true;												_this.renderActivityModel(data.data);											}										}									},									error : function() {									},									complete : function() {										if (!success) {											_this.$timeline.hide();											_this.$activityLinePane.find('.hint').text('加载宣讲会失败').show();											_this.$activityLinePane.find('.spin').html('');											_this._activityReqLock = false;										}									}								});							},							renderPaperModel : function(data) { // 显示试卷模型								// 1.整理数据								var desc = [], desc2 = [];								var parts = data.paperPartInfos || [];								for ( var i = 0; i < parts.length; i++) {									desc.push(parts[i].partName);									if (i == (parts.length - 2)) {										desc.push('和')									} else {										desc.push('、')									}									desc2.push(parts[i].partName + parts[i].questionNum + '道');								}								if (desc.length > 0) {									desc.pop();									var descStr = '试卷由' + desc.join('') + parts.length + '部分组成，其中：' + desc2.join('，')											+ '。';									this.$paperModelPane.find('.partDesc').text(descStr);								}								if (data.totalTime) {									this.$paperModelPane.find('.totalTime').text(											'考试时长：' + Math.floor((data.totalTime + 59) / 60) + '分钟');								}								var skills = data.skills || [];								var items = [];								for ( var i = 0; i < skills.length; i++) {									items.push('<span class="model-tag">' + skills[i] + '</span>');								}								this.$paperModelPane.find('.skills').html(										'<h4 class="title">试卷考核重点</h4>' + items.join(''));								this.$paperModelPane.find('.code-ratio').text(										this.getModelInfosTmpl(data.subjectModeInfos || []));								this.loadGraphRatio(data);							},							renderActivityModel : function(data) { // 显示活动信息								var _this = this;								var dateArray = []; // 日期								var descArray = []; // 描述								var activities = data.activityList || [];								var index = 0;								//								dateArray.push("<li class='time_title'></li>");								//								descArray.push("<li class='time_title' data-passport=''></li>");								for ( var i = 0; i < activities.length; i++) {									var dateTemp = activities[i].activityDate;									//									dateTemp = dateTemp.split("-")[0]+"年"+dateTemp.split("-")[1]+"月"+dateTemp.split("-")[2]+"日";									dateTemp = dateTemp.split("-")[1] + "月" + dateTemp.split("-")[2] + "日";									dateArray.push("<li class='time_title' data-passport='" + activities[i].passcode											+ "'><a href='#'>" + dateTemp + "</a></li>");									var activity = activities[i];									descArray.push("<li><div class='row'>");									descArray.push("<div class='col-md-3 col-md-offset-2 text-right' title='"											+ activity.college + "'><h3 class='text_ellipsis'>" + activity.college											+ "</h3></div>");									descArray.push("<div class='col-md-7 text-left'>");									descArray.push("<h4><i class='fa fa-clock-o'></i>");									descArray.push(activity.beginTime + "-" + activity.endTime);									descArray.push("<i class='fa fa-map-marker'></i>");									descArray.push(activity.address);									descArray.push("<i class='fa fa-users'></i>");									descArray.push(activity.seatNumber || '未知');									descArray.push("</br>");									descArray.push("<i class='fa fa-user'></i>");									if (activity.total && activity.total != 0) {										descArray.push("共有" + activity.total + "人完成考试，" + activity.todo + "人待处理，"												+ activity.recommend + "人已推荐，" + activity.weedOut + "人已淘汰。");									} else {										descArray.push("还没有人完成考试哦");									}									descArray.push("</h4></div>");									descArray.push("</div></li>");									// 离当前最近的活动									if (activity.isCurrent == 1) {										index = i;									}								}								this.$dates.html(dateArray.join(""));								this.$issues.html(descArray.join(""));								$().timelinr();								// 选中离当前时间最近的宣讲会								this.$dates.find('li').eq(index).find('a').trigger('click');								this.$dates.on('click', '.time_title', function() {									//									manager._passport =  $(this).data('passport');									//									manager.loadPositionInfo();									//								    manager.loadReportList();								});							},							getModelInfosTmpl : function(parts) {								if (parts.length > 0) {									var desc = [];									for ( var i = 0; i < parts.length; i++) {										desc.push(parts[i].skillName);										desc.push(' ');										desc.push(parts[i].questionNum);										desc.push('道');										if (parts.length - 1 == i) {											desc.push('。');										} else {											desc.push('，');										}									}									return desc.join('');								} else {									return '无编程题';								}							},							loadGraphRatio : function(data) {								var _this = this;								var low = [], medium = [], high = [];								data.difficulties = data.difficulties || [];								for ( var i = 0; i < data.difficulties.length; i++) {									low.push(data.difficulties[i][0]);									medium.push(data.difficulties[i][1]);									high.push(data.difficulties[i][2]);								}								_this.$paperModelPane.find('#model_ratio').highcharts(										{											credits : {												enabled : false											},											chart : {												height : 400,												type : 'column',												backgroundColor : 'rgba(255,255,255,0)'											},											colors : [ '#FF6666', '#FF9966', '#FFCC66' ],											title : null,											xAxis : {												tickWidth : 0,												categories : data.skills,												labels : {													style : {														color : '#DDDDDD'													}												}											},											yAxis : {												title : null,												gridLineWidth : 0,												lineWidth : 0,												labels : {													formatter : function() {														return '';													}												}											},											legend : {												itemStyle : {													color : '#CCC'												},												itemHoverStyle : {													color : '#FFF'												},												itemHiddenStyle : {													color : '#333'												}											},											tooltip : {												formatter : function() {													return this.x + '<br/>' + this.series.name + ': ' + this.y + '/'															+ this.point.stackTotal;												}											},											plotOptions : {												column : {													stacking : 'normal',													dataLabels : {														enabled : true,														color : '#FFF',														formatter : function() {															return this.y == 0 ? '' : this.y;														}													}												}											},											series : [ {												name : '高难度',												data : high											}, {												name : '中难度',												data : medium											}, {												name : '低难度',												data : low											} ]										});							}						};						toolbar.init();						var SearchModel = Klass.create();						SearchModel.include({							min : null,							max : 10,							commitPaperFromDate : null, //交卷开始时间							commitPaperToDate : null, //交卷截止时间							inputKey : null, // 输入关键字							positionIntents : [							], //职位意向							positionIntentVal : null						});						var SearchModelWrapper = SearchModel.create({							_searchFlag : false						});						var searchData = SearchModelWrapper.inst();						// add search condition						var Search = Controller.create({							tmpls : {								'#tmpl_search' : '$$search', // 							},							init : function() {								this.link();								this.bindEvent();							},							lazyElements : {								'$beginDate' : '[data-link="commitPaperFromDate"]',								'$endDate' : '[data-link="commitPaperToDate"]'							},							link : function() {								var that = this;								this.$$search.link(this.el.selector, searchData);								this.setupElements();							},							bindEvent : function() {								var that = this;								/** 日期 */								this.$beginDate.datepicker({									format : 'yyyy-mm-dd',									todayHighlight : true,									autoclose : true,									language : 'zh-CN'								}).on('changeDate', function() {									var beginDate = that.$beginDate.datepicker('getDate');									var endDate = that.$endDate.datepicker('getDate');									that.$endDate.datepicker('setStartDate', beginDate);									if (beginDate > endDate) {										that.$endDate.datepicker('setDate', beginDate);									}								});								this.$endDate.datepicker({									format : 'yyyy-mm-dd',									autoclose : true,									todayHighlight : true,									language : 'zh-CN'								});							},							events : {								'keyup,[_min],' : 'keyScore',								'blur,[_min],' : 'keyScore',								'click,[_search],' : 'search',								'click,[_searchCancel],' : 'cancelSearch',							},							keyScore : function(e) {								var $ele = $(e.target);								var val = $.trim($ele.val());								if (val && !/^\d+\.?\d{0,1}$/.test(val)) {									val = 0;								} else {									if (val >= 10) {										val = 10									}								}								$ele.val(val);								$.observable(searchData).setProperty('min', val ? val : 0);							},							search : function() {								$.observable(searchData).setProperty('_searchFlag', true);								manager.search();							},							cancelSearch : function() {								$.observable(searchData).setProperty('_searchFlag', false);								this.clearData();								manager.search();							},							clearData : function() {								$.observable(searchData).setProperty({									min : null,									commitPaperFromDate : null, //交卷开始时间									commitPaperToDate : null, //交卷截止时间									inputKey : null, // 输入关键字									positionIntentVal : null								});							}						});						new Search({							el : $("#search-main")						});						var manager = {							$positionInfo : $('.position_info'),							$contarinerReport : $('.report-list-container'),							$contarinerCM : $('#cm-detail-wrapper'),							$nav : $('.category ul'), // 侧边栏							$reportList : $('#report_list'),							$todoBadge : $('.category .badge:first'), // 待处理数							$recommendedBadge : $('.category .badge:eq(1)'), // 已推荐数							$eliminationBadge : $('.category .badge:eq(2)'), // 已淘汰数							$invitedBadge : $('.category .badge:eq(3)'), // 已邀请数							$invalidBadge : $('.category .badge:last'), // 已失败数							$pagerBtnWrapper : $('.morewrapper'),							$hintBlock : $('.hint'),							$candiInviteBtn : $('#candi_invite_btn'), // 邀请候选人按钮							$exportResultBtn : $('#export_result'), // 导出测评结果按钮							$cmPane : $('#comparator-wrapper'), // 对比栏							$cmAlert : null,							$cmList : null,							$cmTriggerBtn : null,							$cmCancelBtn : null,							_cmMaxSize : 5,							_currState : 0, // 状态（待处理:0，已推荐:1，已淘汰:2）							_passport : '', // 活动passport							_btns : [],							_pagers : [],							_class : [ 'todo', 'recommended', 'elimination' ],							_desc : [ '待处理', '已推荐', '已淘汰' ],							_hasInit : [ false, false, false ],							_pageSize : 20,							_testType : 1, // 测评类型 1-社会招聘测评; 2-校园招聘测评;							_wxCompany : 1, // 微信号类型 1公司微信号；0百一微信号							search : function(condition, $ele) {								var that = this;								this.$cmCancelBtn.trigger('click');								this.$reportList.isotope('remove', this.$reportList.find('>.report'), function() {									// 初始化每种状态的列表分页信息									that._pagers.length = 0;									that._pagers.push(new Pager(that._pageSize));									that._pagers.push(new Pager(that._pageSize));									that._pagers.push(new Pager(that._pageSize));									that.currState = 0; // 默认为待处理									that.renderLoadingButton();									that.getLoadingButton().trigger('click');								});							},							init : function() {								var _this = this;								this.initCM();								/** 固定侧边导航栏 */								$('#side_oper').posfixed({									distance : 20,									pos : 'top',									type : 'while',									hide : false								});								/** 初始化报告列表区域 */								this.$reportList.isotope({									itemSelector : '.report',									columnWidth : 1								});								// 初始化加载按钮								this._btns.push(this.$pagerBtnWrapper.find('.todo'));								this._btns.push(this.$pagerBtnWrapper.find('.recommended'));								this._btns.push(this.$pagerBtnWrapper.find('.elimination'));								// 初始化每种状态的列表分页信息								this._pagers.length = 0;								this._pagers.push(new Pager(_this._pageSize));								this._pagers.push(new Pager(_this._pageSize));								this._pagers.push(new Pager(_this._pageSize));								// 加载测评信息								_this.loadPositionInfo();								this.bindEvent();								var hash = window.location.hash.replace('#', '');								var defaultInit = true;								if (hash) {									$('a[href="#' + hash + '"]').trigger('click');									for ( var i = 0; i < _this._class.length; i++) {										if (hash == _this._class[i]) {											defaultInit = false;											$('a[data-filter="' + hash + '"]').trigger('click');											break;										}									}								}								if (defaultInit) {									_this.currState = 0; // 默认为待处理									_this.renderLoadingButton();									_this.getLoadingButton().trigger('click');								}							},							initCM : function() { // 初始化比较器相关								var _this = this;								this.$cmAlert = this.$cmPane.children('.cm-alert');								this.$cmList = this.$cmPane.children('.cm-list');								this.$cmTriggerBtn = this.$cmList.children('.cm-oper-wrapper').children(										'.cm-trigger-btn');								this.$cmCancelBtn = this.$cmList.children('.cm-oper-wrapper')										.children('.cm-cancel-btn');								this.bindCMEvent();							},							bindCMEvent : function() {								var _this = this;								this.$cmTriggerBtn.click(function() { // 去对比									_this.getComparedReports();								});								this.$cmCancelBtn.click(function() { // 清空									_this.emptyCMList();								});								this.$cmList.on('click', '.cm-item-remove-btn', function() { // 删除对比项									_this.removeFromCMList($(this).closest('.cm-item-has').data());								});								this.$contarinerCM.on('click', 'tbody>tr.cm-parent:not(.no-child)', function(e) { // 展开/收缩									if ($(e.target).is('a')) {										return;									}									var $this = $(this);									var index = $this.data('index');									var $ele = $this.children('td:first');									if ($this.hasClass('expand')) {										$this.removeClass('expand');										$this.siblings('.cm-child-' + index).hide();										$ele.html('<i class="fa fa-plus-square-o"> ' + $ele.text());									} else {										$this.addClass('expand');										$this.siblings('.cm-child-' + index).show();										$ele.html('<i class="fa fa-minus-square-o"> ' + $ele.text());									}								});								this.$contarinerCM.on('click', 'a.cm-return', function() { // 返回、继续添加									_this.$contarinerCM.hide();									_this.$contarinerReport.show();									_this.cmPaneShow();									_this.$nav.find('a[data-filter="' + _this._class[_this._currState] + '"]').trigger(											'click');								});								this.$contarinerCM.on('click', 'tfoot button', function() {									var $btn = $(this);									var $wrapper = $btn.closest('td');									var testId = $wrapper.data('testid');									if ($btn.hasClass('recommend')) { // 点击推荐										_this.setReportResultInCM($wrapper, testId, 1)									} else if ($btn.hasClass('elimination')) { // 点击淘汰										_this.setReportResultInCM($wrapper, testId, 2)									}								});								this.$contarinerCM										.on(												'click',												'.grade-score',												function() {													var data = $(this).data('refresh');													modalWaiting															.show(																	'<button class="btn btn-success grade-action" data-action="done">我已完成了评分</button><button class="ml10 btn btn-default grade-action" data-action="cancel">取消</button>',																	'.grade-action', 'click', function(e) {																		var action = $(e.target).data('action');																		modalWaiting.hide(function() {																			if (action == 'done') {																				_this.getComparedReports(data);																			}																		});																	});												});							},							bindEvent : function() {								var _this = this;								$.each(_this.$nav.find('a[data-filter]'), function(index) { // 切换状态									$(this).click(											function() {												_this._currState = index;												_this.renderLoadingButton();												var hasInit = _this._hasInit[_this._currState];												_this.$reportList.isotope({													filter : ('.' + _this._class[_this._currState])															+ (hasInit ? '' : ', .hint')												});												if (!hasInit) { // 如果没有加载过，那么主动触发一次请求													_this.$hintBlock.find('.msg').text(															'正在获取' + _this._desc[_this._currState] + '报告列表...');													_this.getLoadingButton().trigger('click');												}											});								});								for ( var i = 0; i < this._pagers.length; i++) {									_this.getLoadingButton(i).click(function() {										_this.loadReportList();									});								}								$('a[data-toggle="tab"]').on('shown.bs.tab', function(e) {									if ($(e.target).hasClass('reportlist')) {										// 从其他tabContent切换到报告的tabcontent时，会导致isotope列表样式异常										// 需要重新刷新一下以恢复样式										_this.$reportList.isotope('reLayout');									}								});								/** 触发对比 */								this.$reportList.on('dblclick', 'li.report', function() {									var $this = $(this);									$this.find('button.cm-check').trigger('click');								});								this.$reportList.on('mouseenter', 'li.report', function() {									var $this = $(this);									if (!$this.children('.cm-check').hasClass('active')) {										$this.addClass('report-hover');									}								});								this.$reportList.on('mouseleave', 'li.todo', function() {									$(this).removeClass('report-hover');								});								/** 增加推荐淘汰按钮 */								this.$reportList.on('mouseenter', 'li.todo', function() {									if (($(this).find('.score button').attr('disabled') != 'disabled')) {										$(this).find('.score button').stop().fadeIn('fast');									}								});								this.$reportList.on('mouseleave', 'li.todo', function() {									if (($(this).find('.score button').attr('disabled') != 'disabled')) {										$(this).find('.score button').stop().hide();									}								});								this.$reportList.on('click', 'li.report button.cm-check', function() {									var $this = $(this);									var $report = $this.closest('.report');									if ($this.hasClass('active')) { // 删除										_this.removeFromCMList({											$report : $report,											$btn : $this										});									} else { // 选中										_this.add2CMList({											$report : $report,											$btn : $this										});									}								});								this.$reportList.on('click', 'li.todo .score button', function(e) {									var $btn = $(e.target);									if ($btn.hasClass('recommend')) { // 点击推荐										_this.setReportResultInList($btn.closest('.report'), 1);									} else if ($btn.hasClass('elimination')) { // 点击淘汰										_this.setReportResultInList($btn.closest('.report'), 2);									}								});								/** 邀请候选人按钮 */								_this.$candiInviteBtn.click(function() {									if (POSITION_ID && POSITION_ID != '') {										window.location.href = root + '/sets/page/jumpInvite/' + POSITION_ID + '/';									}								});								/** 编辑测评 */								_this.$positionInfo.on('click', '.title>a', function() {									if (POSITION_ID && POSITION_ID != '') {										if (_this._testType == 2) // 校招										{											window.open(root + '/sets/page/editcampus/' + POSITION_ID + '/', '_blank');										} else // 社招										{											window													.open(root + '/sets/page/editpost/' + POSITION_ID + '.html',															'_blank');										}									}								});								/**自助配置微信测评帮助**/								_this.$positionInfo.on('click', '.activity-help', function() {									var $modal = $('#modal_guide');									$modal.modal();									// 根据选择的公众号类型显示不同的引导 1：企业微信号  0：百一微信号									if (_this._wxCompany == 1) { // 企业微信号										$modal.find('.modal-body').load(												root + '/sets/page/campusguideself/' + POSITION_ID + '?action=help');									} else { // 百一微信号										$modal.find('.modal-body').load(												root + '/sets/page/campusguide101/' + POSITION_ID + '?action=help');									}									$modal.find('.modal-footer button').bind('click', function() {										$modal.modal('hide');									});									$modal.on('hidden.bs.modal', function(e) {										// 局部刷新passport										manager.loadPositionInfo(1);									});								});							},							refreshRelative : function(testid, anchor, score) {								var $target = this.$reportList.find('.report-testid-' + testid										+ '>.items-score>.anchor-' + anchor);								$target.css({									border : '1px solid red'								});								$target.one('mouseout', function() {									$(this).css({										border : '1px solid #DDD'									})								});								$target.children('.anchor-val-' + anchor).html(score);							},							getCmItemEmptyImpl : function(index) {								var items = [];								items.push('<dl class="cm-item cm-item-empty">');								items.push('<dt>' + index + '</dt>');								items.push('<dd>还可继续添加</dd>');								items.push('</dl>');								return items.join('');							},							getCmItemTmpl : function(data) {								var items = [];								var href = this.getReportUrl(data.testId);								items.push('<dl class="cm-item cm-item-has cm-item-testid-' + data.testId + '">');								items.push('<dt>');								items.push('<a target="_blank" href="' + href + '">');								if (data.candidatePic) {									items.push('<img src="' + data.candidatePic + '" class="img-rounded">');								} else {									items.push('<img src="' + (root + '/core/images/portrait_default_big.png')											+ '" class="img-rounded">');								}								items.push('</a>');								items.push('</dt>');								items.push('<dd>');								items.push('<a class="candi-name" target="_blank" href="' + href + '">')								items.push(data.candidateName);								items.push('</a>')								items.push('<div class="cm-item-score">')								items.push(data.getScore);								items.push('分<br/>');								items.push('<a class="cm-item-remove-btn text-danger">删除</a>');								items.push('</div>')								items.push('</dd>');								items.push('<dl class="cm-item cm-item-has">');								items.push('</dl>');								return items.join('');							},							cmAlert : function(alertText) {								var _this = this;								this.$cmAlert.text(alertText);								this.$cmAlert.animate({									top : '-36px'								}, 200);								clearTimeout(this.timeoutId4cmAlert);								this.timeoutId4cmAlert = setTimeout(function() {									_this.$cmAlert.animate({										top : 0									}, 200, function() {										_this.$cmAlert.text('');									});								}, 3000);							},							cmPaneShow : function() {								this.$cmPane.stop().animate({									bottom : 0								}, 200);							},							cmPanelHide : function() {								this.$cmPane.stop().animate({									bottom : '-100px'								}, 200);							},							add2CMList : function(bindEle) {								var count = this.getCmPaneCount();								if (count >= this._cmMaxSize) {									this.cmAlert('对比栏满了，删除一些不需要的栏内报告才能继续添加哦！');									return;								}								if ((count + 1) == 1) {									this.$cmTriggerBtn.attr('disabled', 'disabled');								} else {									this.$cmTriggerBtn.removeAttr('disabled');								}								var defaultText = bindEle.$btn.text();								bindEle.$btn.addClass('active btn-info').removeClass('btn-default').html(										'<i class="fa fa-check-square-o"></i>' + defaultText);								bindEle.$report.addClass('report-checked').removeClass('report-hover');								var data = bindEle.$report.data();								var $cmItem = $(this.getCmItemTmpl(data));								$cmItem.data(bindEle);								$.each(this.$cmList.children('.cm-item'), function() {									var $ele = $(this);									if ($ele.hasClass('cm-item-empty')) {										$ele.replaceWith($cmItem);										return false;									}								});								this.cmPaneShow();							},							resetCMList : function() {								var items = this.$cmList.children('.cm-item');								for ( var i = 0; i < items.length; i++) {									var $item = $(items[i]);									if ($item.hasClass('cm-item-empty')) {										$item.find('dt').text(i + 1);									}									if (i == items.length - 1) {										$item.after(this.getCmItemEmptyImpl(this._cmMaxSize));									}								}							},							removeFromCMList : function(bindEle) {								var _this = this;								var defaultText = bindEle.$btn.text();								bindEle.$btn.addClass('btn-default').removeClass('active btn-info').html(										'<i class="fa fa-square-o"></i>' + defaultText);								bindEle.$report.removeClass('report-checked');								var data = bindEle.$report.data();								$.each(this.$cmList.children('.cm-item-has'), function(index, ele) {									if (data.testId == $(ele).data().$report.data().testId) {										$(ele).remove();										ele = null;										_this.resetCMList();										return false;									}								});								var count = this.getCmPaneCount();								if (count == 1) {									this.$cmTriggerBtn.attr('disabled', 'disabled');								}								if (count == 0) {									this.cmPanelHide();									this.$contarinerCM.hide();									this.$contarinerReport.show();									this.$nav.find('a[data-filter="' + _this._class[_this._currState] + '"]').trigger(											'click');								}							},							emptyCMList : function() {								var _this = this;								$.each(this.$cmList.children('.cm-item-has'), function() {									_this.removeFromCMList($(this).data());								});							},							getCmPaneCount : function() {								return this.$cmList.children('.cm-item-has').length;							},							refreshReportRender : function($report, action) {								$report.removeClass('todo').addClass(this._class[action]);								$report.find('.score button').remove();								if (action == 1) {									$report.children('.candi-name').children('.result-tag').addClass(											'fa fa-smile-o text-success');								}								if (action == 2) {									$report.children('.candi-name').children('.result-tag').addClass(											'fa fa-frown-o text-danger');								}								var data = $report.data();								data._state = this._class[action];								$report.data(data);							},							setReportResultInCM : function($wrapper, testId, action) {								var _this = this;								var success = false;								$										.setsAjax({											url : root + '/sets/report/setTestResult/' + POSITION_ID + '/' + testId													+ '/' + action,											type : 'post',											beforeSend : function() {												$wrapper.find('button').attr('disabled', 'disabled');												if (action == 1) {													$wrapper.find('button.recommend').text('请求中...');													$wrapper.find('button.elimination').hide();												} else {													$wrapper.find('button.elimination').text('请求中...');													$wrapper.find('button.recommend').hide();												}											},											success : function(data) {												if (data.code == 0) {													if (data.data && data.data.code == 'SUCCESS') {														success = true;														// 删除列														_this.$contarinerCM.find('tbody>tr>td.item-testid-' + testId)																.empty();														_this.$contarinerCM.find('td.item-testid-' + testId).filter(																'.item-candi').html(																'<p>暂无候选人</p><a class="cm-return">去添加</a>');														// 刷新报告列表中报告样式														var $report = _this.$reportList.children('.report-testid-'																+ testId);														action = data.data.reportStatus;														_this.refreshReportRender($report, action);														_this.renderBadgeCountInfo(data.data);														// 从对比栏中删除列表														_this.removeFromCMList(_this.$cmList.children(																'.cm-item-testid-' + testId).data());													}												}											},											error : function(e) {											},											complete : function() {												if (!success) { // 如果没有成功													$wrapper.find('button').removeAttr('disabled', 'disabled');													if (action == 1) {														$wrapper.find('button.recommend').text('推荐');														$wrapper.find('button.elimination').show();													} else {														$wrapper.find('button.elimination').text('淘汰');														$wrapper.find('button.recommend').show();													}												}											}										});							},							setReportResultInList : function($report, action) { // action(1:推荐								var _this = this;								var data = $report.data();								var testId = data.testId;								var operSuccess = false;								$.setsAjax({									url : root + '/sets/report/setTestResult/' + POSITION_ID + '/' + testId + '/'											+ action,									type : 'post',									beforeSend : function() {										$report.find('.score button').attr('disabled', 'disabled');										if (action == 1) {											$report.find('.score button.recommend').text('请求中...');											$report.find('.score button.elimination').hide();										} else {											$report.find('.score button.elimination').text('请求中...');											$report.find('.score button.recommend').hide();										}									},									success : function(data) {										if (data.code == 0) {											if (data.data && data.data.code == 'SUCCESS') {												operSuccess = true;												action = data.data.reportStatus;												_this.refreshReportRender($report, action);												_this.$reportList.isotope({													filter : '.todo'												});												_this.renderBadgeCountInfo(data.data);											}										}									},									error : function(e) {									},									complete : function() {										if (!operSuccess) { // 如果没有成功											$report.find('.score button').removeAttr('disabled', 'disabled');											if (action == 1) {												$report.find('.score button.recommend').text('推荐');												$report.find('.score button.elimination').show();											} else {												$report.find('.score button.elimination').text('淘汰');												$report.find('.score button.recommend').show();											}										}									}								});							},							getPager : function(state) {								if (!isNaN(state)) {									return this._pagers[state];								}								return this._pagers[this._currState];							},							getLoadingButton : function(state) {								if (!isNaN(state)) {									return this._btns[state];								}								return this._btns[this._currState];							},							getOperationTmpl : function(_state) {								var items = [];								if (_state == 'recommended') {									items.push('<button class="btn btn-success" disabled="disabled">已推荐</button>')								} else if (_state == 'elimination') {									items.push('<button class="btn btn-danger" disabled="disabled">已淘汰</button>')								} else {									items.push('<button class="btn btn-success recommend">推荐</button>');									items.push('<button class="btn btn-danger elimination">淘汰</button>');								}								return items.join('');							},							getItemsScoreTmpl : function(scores, testId) {								var items = [];								if (scores.length > 0) {									items.push('<ul class="list-inline items-score">');									for ( var i = 0; i < scores.length; i++) {										var data = scores[i];										items.push('<li class="score-item anchor-' + data.anchor + '" data-testId ='												+ testId + '>');										items.push('<span>' + data.name + '</span>');										items.push('<div class="anchor-val-' + data.anchor + '">')										if (data.score || data.score == 0) {											items.push(data.score);										}										if (data.editable == true) {											items.push(' <a target="_blank" href="'													+ this.getReportUrl(testId, data.anchor)													+ '"><i class="fa fa-pencil"></i></a>')										}										items.push('</div>')										items.push('</li>');									}									items.push('</ul>');								}								return items.join('');							},							getTmpl : function(data, _class) {								var href = this.getReportUrl(data.testId);								var items = [];								items.push('<li class="group report ' + _class + ' report-testid-' + data.testId										+ '"><div class="meta">');								items.push('<a target="_blank" href="' + href + '">');								if (data.candidatePic) {									items.push('<img src="' + data.candidatePic + '" class="img-rounded avatar">');								} else {									items.push('<img src="' + (root + '/core/images/portrait_default_big.png')											+ '" class="img-rounded avatar">');								}								items.push('</a>');								items.push('<span class="date">' + data.reportDateDesc										+ '</span></div><h3 class="candi-name">');								if (data.reportState == 0) {									items.push('<i class="fa fa-circle blue"></i> ');								}								if (_class == 'todo') {									items.push('<i class="result-tag"></i> ');								}								if (_class == 'recommended') {									items.push('<i class="fa fa-smile-o text-success result-tag"></i> ');								}								if (_class == 'elimination') {									items.push('<i class="fa fa-frown-o text-danger result-tag"></i> ');								}								items.push('<a target="_blank" href="' + href + '">');								items.push(data.candidateName + '</a></h3>');								items.push('<div class="score alizarin">');								items.push('<span>');								items.push(Star.getStarTmpl(data.getScore));								items.push('</span> ');								items.push(data.getScore);								items.push('<span>分')								items.push('</span>');								if (_class == 'todo') {									items.push(this.getOperationTmpl());								}								items.push('</div>');								if (data.items) {									items.push(this.getItemsScoreTmpl(data.items || [], data.testId));								}								items.push('<button type="button" class="btn btn-default btn-sm cm-check">');								items.push('<i class="fa fa-square-o"></i> 对比');								items.push('</button>');								items.push('</li>');								return items.join('');							},							loadPositionInfo : function(refreshPassport) {								var passport = this._passport;								var _this = this;								$.setsAjax({									url : root + '/sets/position/get/' + POSITION_ID + '?activityPassport=' + passport,									type : 'post',									success : function(data) {										if (data.code == 0) {											_this.renderPositionInfo(data.data);											if (!refreshPassport) {												_this.renderBadgeCountInfo(data.data);											}										}									},									error : function() {									},									complete : function() {									}								});							},							renderLoadingButton : function() {								for ( var i = 0; i < this._btns.length; i++) {									if (i == this._currState) {										this.getLoadingButton(i).show();									} else {										this.getLoadingButton(i).hide();									}								}							},							renderPositionInfo : function(data) {								var _this = this;								var _position = data.position;								if (_position != null) {									document.title = _position.positionName + ' - ' + document.title;									if (data.employerName || data.companyName) {										this.$positionInfo.find('.title').html(_position.positionName);									} else {										this.$positionInfo.find('.title').html(												_position.positionName + '<a><i class="fa fa-wrench"></i></a>');									}									this.$positionInfo.find('.create_time').text(											"创建于 " + $.sets_formatTime(_position.publishDate, 'day'));									$('#position_desc_content').html(											(_position.requiresDesc || '无').replace(/\n/g, '<br/>'));									//　微信号类型									_this._wxCompany = _position.weixinCompany;									// 如果为校招，显示宣讲会按钮									if (_position.testType == 2) {										_this._testType = 2;										this.$positionInfo.find('.activity-line').show();										// 百一公众号，显示passport										if (_position.weixinCompany == 0) {											this.$positionInfo.find('.activity-passport').html(													'考试口令：' + '<b>' + _position.passport + '</b>')													.removeClass('hidden');										}										this.$positionInfo.find('.activity-help').show();									} else {										this.$positionInfo.find('.activity-line').hide();										this.$positionInfo.find('.activity-passport').hide();										this.$positionInfo.find('.activity-help').hide();									}									/** 导出测评结果 */									this.$exportResultBtn.click(function() {										if (POSITION_ID && POSITION_ID != '') {											var start = false;											$.setsAjax({												url : root + '/sets/position/exportPosition/',												contentType: 'application/json',												data: JSON.stringify({													positionId: POSITION_ID,													score: {														min : searchData._searchFlag ? searchData.min : 0,														max : 100													},													commitPaperFromDate : searchData._searchFlag ? searchData.commitPaperFromDate															: null,													commitPaperToDate : searchData._searchFlag ? searchData.commitPaperToDate : null,													inputKey : searchData._searchFlag ? searchData.inputKey : null,													positionIntent : searchData._searchFlag ? searchData.positionIntentVal : null												}),												beforeSend : function() {													_this.$exportResultBtn.attr('disabled', 'disabled');												},												success : function(data) {													if (data.code == 0) {														start = true;														_this.$exportResultBtn.data('exporting-id', data.data);														_this.checkExport(_position.positionName);													}												},												complete : function() {													if (start) {														_this.$exportResultBtn.text('正在导出').addClass('exporting');													} else {														_this.$exportResultBtn.text('导出失败，请重试').removeAttr('disabled');													}												}											});										}									});								}								if (data.positionIntents && data.positionIntents.length) {									// 搜索条件包含意向职位									$.observable(searchData.positionIntents).refresh(data.positionIntents);								}							},							checkExport : function(positionName) {								var exportid = this.$exportResultBtn.data('exporting-id');								var _this = this;								if (exportid) {									$.setsAjax({										url : root + '/sets/position/checkPosition/' + exportid,										success : function(data) {											if (data.code == 0) {												var result = data.data;												if (result) {													window.location.href = root + '/sets/position/downloadPosition/'															+ exportid + '/'															+ encodeURIComponent(positionName.replace(/\//g, '-'))															+ '.xls';													_this.$exportResultBtn.html(															'<i class="fa fa-paperclip"></i> 导出测评结果').removeAttr(															'disabled').removeClass('exporting');												} else {													setTimeout(function() {														_this.checkExport(positionName);													}, 5000);												}											} else {												_this.$exportResultBtn.html('<i class="fa fa-frown-o"></i> 导出结果失败');												setTimeout(function() {													_this.$exportResultBtn.html(															'<i class="fa fa-paperclip"></i> 导出测评结果').removeAttr(															'disabled').removeClass('exporting');												}, 3000);											}										}									});								}							},							renderBadgeCountInfo : function(data) {								this.$todoBadge.text(data.todoNum || 0);								this.$recommendedBadge.text(data.chosenNum || 0);								this.$eliminationBadge.text(data.eliminationNum || 0);								this.$invitedBadge.text((data.invitatedNum || 0) - (data.invitationFailNum || 0));								this.$invalidBadge.text(data.invitationFailNum || 0);							},							getReportUrl : function(testId, anchor) {								if (anchor == 4) {									var url = root + '/sets/page/skillreport/' + POSITION_ID + '/' + testId											+ '.html?jump=change-score';								} else if (anchor == 2) {									var url = root + '/sets/page/skillreport/' + POSITION_ID + '/' + testId											+ '.html?jump=essays';								} else if (anchor == 0) {									var url = root + '/sets/page/skillreport/' + POSITION_ID + '/' + testId											+ '.html?jump=select';								} else if (anchor == 1) {									var url = root + '/sets/page/skillreport/' + POSITION_ID + '/' + testId											+ '.html?jump=system'								} else if (anchor == 3) {									var url = root + '/sets/page/skillreport/' + POSITION_ID + '/' + testId											+ '.html?jump=iq'								} else {									var url = root + '/sets/page/skillreport/' + POSITION_ID + '/' + testId + '.html#'											+ (anchor || '');								}								return url;							},							getCMDetailTmpl : function(datas, refreshOpts) {								var cmList = this.$cmList.children('.cm-item-has');								var parentIndex = 0;								var items = [];								var tfoot = [];								tfoot.push('<tfoot><tr><td></td>');								items.push('<thead><tr><th class="text-info" colspan="5">比一比</th>');								items.push('<th style="text-align:right;font-size:12px;font-weight:normal;">');								items.push('<a class="cm-return"><i class="fa fa-undo"></i> 返回</a></th>');								items.push('</tr></thead>');								items.push('<tbody><tr>');								items.push('<td>应聘人</td>')								var _testId = [];								for ( var i = 0; i < cmList.length; i++) {									var data = $(cmList[i]).data().$report.data();									var href = this.getReportUrl(data.testId);									_testId.push(data.testId);									items.push('<td class="item item-candi item-testid-' + data.testId + '">');									items.push('<a target="_blank" href="' + href + '">');									if (data.candidatePic) {										items.push('<img src="' + data.candidatePic + '" class="img-rounded">');									} else {										items.push('<img src="' + (root + '/core/images/portrait_default_big.png')												+ '" class="img-rounded">');									}									items.push('</a>');									items.push('<a class="candi-name" target="_blank" href="' + href + '">');									items.push(data.candidateName);									items.push('</a>');									items.push('<div class="total-score">')									items.push(data.getScore);									items.push('</div>');									tfoot.push('<td class="item item-candi item-testid-' + data.testId											+ '" data-testid=' + data.testId + '>');									tfoot.push(this.getOperationTmpl(data._state));									tfoot.push('</td>');								}								for ( var k = 0; k < this._cmMaxSize - cmList.length; k++) {									items.push('<td class="item"><p>暂无候选人</p><a class="cm-return">去添加</a></td>');									tfoot.push('<td class="item"><p>暂无候选人</p><a class="cm-return">去添加</a></td>');								}								items.push('</tr>');								tfoot.push('</tr></tfoot>');								for ( var i = 0; i < datas.length; i++) {									var data = datas[i];									if (data.level == 0) {										parentIndex++;										if ((i + 1 < datas.length) && (datas[i + 1].level != 0)) { // 当含有子元素时才可以伸缩											items.push('<tr class="rows-items cm-parent expand text-info" data-index="'													+ parentIndex + '">');											items.push('<td><i class="fa fa-minus-square-o"></i> ')										} else {											items													.push('<tr class="rows-items cm-parent no-child text-info" style="cursor:default;" data-index="'															+ parentIndex + '">');											items.push('<td><span style="width:12px;display:inline-block;"></span> ')										}									} else {										items.push('<tr class="rows-items cm-child cm-child-' + parentIndex + '">');										items.push('<td><span style="width:30px;display:inline-block;"></span>');									}									items.push(data.name + '</td>');									for ( var j = 0; j < data.rowItems.length; j++) {										var itemData = data.rowItems[j];										var testId = _testId[j];										if (refreshOpts) {											if (refreshOpts.anchor == data.anchor && refreshOpts.testId == testId) {												this.refreshRelative(testId, data.anchor, itemData.score);											}										}										if (itemData.score || itemData.score == 0) {											items.push('<td class="item item-testid-' + testId + '">' + itemData.score);											if (refreshOpts) {												if (refreshOpts.anchor == data.anchor && refreshOpts.testId == testId) {													this.refreshRelative(testId, data.anchor, itemData.score);												}											}										} else {											items.push('<td class="item item-testid-' + testId + '">&nbsp;');										}										if (itemData.editable) {											items.push('<a class="grade-score" target="_blank" href="');											items.push(this.getReportUrl(_testId[j], data.anchor));											items.push('" data-refresh=\'');											items.push(JSON.stringify({												anchor : data.anchor,												testId : testId											}));											items.push('\'">去评分 <i class="fa fa-pencil"></i></a>');										}										items.push('</td>')									}									for ( var k = 0; k < this._cmMaxSize - data.rowItems.length; k++) {										items.push('<td class="item">&nbsp;</td>');									}									items.push('</tr>');								}								items.push('</tbody>');								items.push(tfoot.join(''));								return items.join('');							},							renderCMDetail : function(datas, refreshOpts) {								this.$contarinerCM.html(this.getCMDetailTmpl(datas, refreshOpts));							},							getComparedReports : function(refreshOpts) {								var _this = this;								var testIds = [];								$.each(this.$cmList.children('.cm-item-has'), function() {									testIds.push($(this).data().$report.data().testId);								});								var success = false;								$.setsAjax({									url : root + '/sets/report/getComparedReports',									type : 'post',									contentType : 'application/json',									data : JSON.stringify(testIds),									beforeSend : function() {										modalWaiting.show('正在分析数据...');									},									success : function(data) {										if (data.code == 0 && data.data) {											if (data.data.errorCode == 0) {												success = true;												_this.$contarinerReport.hide();												_this.cmPanelHide();												_this.renderCMDetail(data.data.comparedItems || [], refreshOpts);												_this.$contarinerCM.show();											}										}									},									complete : function() {										if (success) {											modalWaiting.hide();										} else {											setTimeout(function() {												modalWaiting.title('分析数据出错了，请再尝试一下吧');												setTimeout(function() {													modalWaiting.hide();												}, 1000);											}, 500);										}									}								});							},							loadReportList : function() {								var _this = this;								var currState = this._currState;								var passport = this._passport;								var pager = this.getPager();								var success = false;								$.setsAjax({									url : root + '/sets/report/positionReport',									type : 'post',									contentType : 'application/json',									data : JSON.stringify({										positionId : POSITION_ID,										testResult : currState,										passport : passport,										score : {											min : searchData._searchFlag ? searchData.min : 0,											max : 100										},										page : {											pageSize : pager.pageSize,											requestPage : pager.requestPage										},										commitPaperFromDate : searchData._searchFlag ? searchData.commitPaperFromDate												: null,										commitPaperToDate : searchData._searchFlag ? searchData.commitPaperToDate : null,										inputKey : searchData._searchFlag ? searchData.inputKey : null,										positionIntent : searchData._searchFlag ? searchData.positionIntentVal : null									}),									beforeSend : function() {										_this.getLoadingButton(currState).attr('disabled', 'disabled').text('加载中...');									},									success : function(data) {										if (data.code == 0) {											success = true;											if (data.data) {												_this._pagers[currState].next();												_this.$reportList.isotope({ // 隐藏提示快													filter : '.' + _this._class[currState]												});												// 设置已加载标记为true												_this._hasInit[currState] = true;												_this.handleList(data.data, _this._class[currState]);												if (data.data.length < pager.pageSize) {													_this._pagers[currState].hasMore = false;												}											}										}									},									error : function(e) {									},									complete : function() {										if (success) {											if (_this._pagers[currState].hasMore) {												_this.getLoadingButton(currState).removeAttr('disabled')														.text('加载更多...');											} else {												_this.getLoadingButton(currState).text('没有更多的数据了');											}										} else {											_this.getLoadingButton(currState).removeAttr('disabled').text('加载失败，请重试');										}										currState = null;										pager = null;									}								});							},							defaultPortrait : '/core/images/portrait_default.png', // 默认的照片							handleList : function(datas, _class) {								var _this = this;								// 去重								var set = {};								$.each(this.$reportList.find('.' + _class), function() {									set[$(this).data().testId] = '1';								});								for ( var i = 0; i < datas.length; i++) {									var data = datas[i];									if (set.hasOwnProperty(data.testId)) {										return;									}									var $report = $(this.getTmpl(data, _class));									data._state = _class;									$report.data(data);									this.$reportList.append($report).isotope('appended', $report);									$report.imagesLoaded().progress(function(instance, image) {										if (!image.isLoaded) {											image.img.src = root + _this.defaultPortrait;										}									});								}								setTimeout(function() {									_this.$reportList.isotope('reLayout');								}, 50);							}						};						manager.init();						var invited = {							$invitedPane : $('#list_invited'),							$invitedList : $('#list_invited .invited_list tbody'),							$loadingButton : $('#list_invited .morewrapper button'),							_pager : new Pager(20),							_stateMapping : {								'4' : {									icon : 'fa-beer',									desc : '未答题'								},								'8' : {									icon : 'fa-pencil',									desc : '正在答题'								},								'12' : {									icon : 'fa-inbox',									desc : '答题完毕'								},								'16' : {									icon : 'fa-file-text-o',									desc : '待处理'								},								'20' : {									icon : 'fa-smile-o',									desc : '已推荐'								},								'24' : {									icon : 'fa-frown-o',									desc : '已淘汰'								},								'28' : {									icon : 'fa-ban',									desc : '邀请失效'								}							},							init : function() {								var _this = this;								this.$invitedList.isotope({									itemSelector : '.report',									columnWidth : 1								});								this.$loadingButton.click(function() {									_this.loadInvitedList();								});								this.$loadingButton.trigger('click');							},							loadInvitedList : function() {								var _this = this;								var success = false;								$.setsAjax({									url : root + '/sets/invitation/listInvitation/' + POSITION_ID,									type : 'post',									data : {										pageSize : _this._pager.pageSize,										requestPage : _this._pager.requestPage									},									beforeSend : function() {										_this.$loadingButton.attr('disabled', 'disabled').text('加载中...');									},									success : function(data) {										if (data.code == 0) {											success = true;											if (data.data) {												_this._pager.next();												_this.handleList(data.data);												if (data.data.length < _this._pager.pageSize) { // 没有更多的数据了													_this._pager.hasMore = false;												}											}										}									},									error : function(e) {									},									complete : function() {										if (success) {											if (_this._pager.hasMore) {												_this.$loadingButton.removeAttr('disabled').text('加载更多...');											} else {												_this.$loadingButton.text('没有更多的数据了');											}										} else {											_this.$loadingButton.removeAttr('disabled').text('加载失败，请重试');										}									}								});							},							handleList : function(datas) {								var items = [];								for ( var i = 0; i < datas.length; i++) {									var data = datas[i];									var $tmp = $(this.getTmpl(data));									$tmp.data(data);									items.push($tmp);								}								this.$invitedList.append(items);							},							getTmpl : function(data) {								var items = [];								items.push('<tr class="invalid-item">');								items.push('<td style="width:100px;">' + data.candidateName + '</td>');								items.push('<td style="width:280px;">' + data.candidateEmail + '</td>');								items.push('<td style="width:310px;">');								items.push(data.invitationDateDesc + '（ ' + $.sets_formatTime(data.invitationDate)										+ ' ）');								items.push('</td>');								items.push('<td>' + this.getState(data.invitationState) + '</td>');								items.push('</tr>');								return items.join('');							},							getState : function(state) {								var info = this._stateMapping[state];								if (info) {									return '<i class="fa ' + info.icon + '"></i> ' + info.desc;								}								return '<i class="fa fa-question"></i> 未知';							}						};						invited.init();						var invalid = {							$invalidPane : $('#list_invalid'),							$invalidList : $('#list_invalid .invalid_list tbody'),							$loadingButton : $('#list_invalid .morewrapper button'),							_pager : new Pager(20),							init : function() {								var _this = this;								this.$invalidList.isotope({									itemSelector : '.report',									columnWidth : 1								});								this.$loadingButton.click(function() {									_this.loadInvalidList();								});								this.$invalidList.on('click', '.invalid-item button', function(e) {									var $btn = $(e.target);									var testId = $btn.closest('.invalid-item').data().testId;									if ($btn.hasClass('resend')) {										_this.resendEmail(testId, $btn.closest('.invalid-item'));									}									if ($btn.hasClass('remove')) {										_this.removeEmail(testId, $btn.closest('.invalid-item'));									}								});								this.$loadingButton.trigger('click');							},							resendEmail : function(testId, $item) {								var _this = this;								$.setsAjax({									url : root + '/sets/invitation/reInviteWithStatistics/' + POSITION_ID + '/'											+ testId,									type : 'post',									contentType : 'application/json',									beforeSend : function() {										if ($item) {											$item.find('button').attr('disabled', 'disabled').hide();											$item.find('button.resending').show();										}									},									success : function(data) {										if (data.code == 0) {											if (data.data) {												if (data.data.code == 'SUCCESS') {													$item.remove();												} else {													$item.children('td:eq(3)').text(data.data.message);												}												manager.renderBadgeCountInfo(data.data);											}										}									},									error : function(e) {									},									complete : function() {										if ($item) {											$item.find('button').removeAttr('disabled').show();											$item.find('button.resending').hide();										}									}								});							},							removeEmail : function(testId, $item) {								var _this = this;								var ids = [];								ids.push(testId);								var success = false;								$.setsAjax({									url : root + '/sets/invitation/delFailedInvitation/' + POSITION_ID,									type : 'post',									contentType : 'application/json',									data : JSON.stringify(ids),									beforeSend : function() {										if ($item) {											$item.find('button').attr('disabled', 'disabled');										}									},									success : function(data) {										if (data.code == 0) {											success = true;											if (data.data) {												manager.renderBadgeCountInfo(data.data);												$item.remove();											}										}									},									error : function(e) {									},									complete : function() {										if ($item) {											$item.find('button').removeAttr('disabled');										}									}								});							},							loadInvalidList : function() {								var _this = this;								var success = false;								$.setsAjax({									url : root + '/sets/invitation/list/' + POSITION_ID,									type : 'post',									data : {										pageSize : _this._pager.pageSize,										requestPage : _this._pager.requestPage									},									beforeSend : function() {										_this.$loadingButton.attr('disabled', 'disabled').text('加载中...');									},									success : function(data) {										if (data.code == 0) {											success = true;											if (data.data) {												if (_this._pager.requestPage == 1) {													// 如果是请求最新的数据，那么调用，告知服务端数据已经看过													$															.setsAjax({																url : root + '/sets/invitation/delInvitationLog/'																		+ POSITION_ID,																type : 'post'															});												}												_this._pager.next();												_this.handleList(data.data);												if (data.data.length < _this._pager.pageSize) { // 没有更多的数据了													_this._pager.hasMore = false;												}											}										}									},									error : function(e) {									},									complete : function() {										if (success) {											if (_this._pager.hasMore) {												_this.$loadingButton.removeAttr('disabled').text('加载更多...');											} else {												_this.$loadingButton.text('没有更多的数据了');											}										} else {											_this.$loadingButton.removeAttr('disabled').text('加载失败，请重试');										}									}								});							},							handleList : function(datas) {								var items = [];								for ( var i = 0; i < datas.length; i++) {									var data = datas[i];									var $tmp = $(this.getTmpl(data));									$tmp.data(data);									items.push($tmp);								}								this.$invalidList.append(items);							},							getTmpl : function(data) {								var items = [];								items.push('<tr class="invalid-item">');								items.push('<td style="width:80px;">' + data.candidateName + '</td>');								items.push('<td style="width:280px;">' + data.candidateEmail + '</td>');								items.push('<td style="width:120px;">' + data.invitationDateDesc + '</td>');								items.push('<td>' + data.invitationErrtxt + '</td>');								items.push('<td style="width:125px;">');								items										.push('<button type="button" class="btn btn-default btn-xs resending" style="color:#798490;display:none;"><i class="fa fa-spinner fa-spin"></i> 重新发送中...</button>');								items										.push('<button type="button" class="btn btn-default btn-xs resend" style="color:#798490;"><i class="glyphicon glyphicon-send"></i> 重发</button>');								items										.push('<button type="button" class="btn btn-default btn-xs ml5 remove" style="color:#798490;"><i class="fa fa-trash-o"></i> 删除</button>');								items.push('</td>');								items.push('</tr>');								return items.join('');							}						};						invalid.init();						var jump = {							init : function() {								this.jump();							},							jump : function() {								$('#examModel').click(function() {									window.open(root + "/sets/page/testReport/" + POSITION_ID + "/2", '_blank');								});							}						}						jump.init();					});});