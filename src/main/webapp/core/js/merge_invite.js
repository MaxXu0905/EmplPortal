$(function($) {	"use strict";	(function($) {		$LAB				.wait(function() {//										RenderUtils.extend({						extended : function() {							RenderUtils.myHelpers();						},						myHelpers : function() {						},						hasItems: function(items){							var c = 0;							for ( var key in items)								c++;							return c;						}					});					RenderUtils.init();					var MainModel = Klass.create();					MainModel.include({						items: {}, // 选中的id						hasItems: 0,						loadingMore: false, // 加载更多测评						hasMore: true, // 是否有更多测评，						pageInfo : { // 分页参数							pageSize : 50,							requestPage : 1						},						positions:[]					});					var mainData = MainModel.inst();					var MainController = Controller							.create({								attrs : {								},								records : {},								lazyElements : {								},								events : {									'click,.position-item,' : 'selectPosition',									'click,.loadMore,' : 'getPositions', 									'click,.btn-invite,' : 'invite', 								},								lazyEvent : true,								tmpls : {									'#tmpl_main' : '$$main'								},								init : function() {									this.link();									this.getPositions();									this.addObservers();									this.bindEvent();								},								link : function() {									var that = this;									this.$main = this.el;									this.$$main.link(this.$main.selector, mainData);									this.linked({										refreshLazyElements : true									}); // 绑定事件								},								getPositions: function(){									var that = this;									var hasMore = true;									$.setsAjax({										url : root + '/sets/position/positionPage',										type : 'post',										data : mainData.pageInfo,										beforeSend : function() {											$.observable(mainData).setProperty({												loadingMore : true											});										},										success : function(data) {											if (data.code == 0) {												if (data.data) {													var count = data.data.length;													if (count * 1 < mainData.pageInfo.pageSize) {														hasMore = false;													}													$.observable(mainData.pageInfo).setProperty({														requestPage : ++ mainData.pageInfo.requestPage													});													$.observable(mainData.positions).insert(data.data);												} else {													hasMore = false;												}											}										},										complete: function(){											$.observable(mainData).setProperty({												loadingMore : false,												hasMore: hasMore											});										}									});								},								addObservers : function() {								},								selectPosition: function(e){									var $item = $(e.target).closest('.position-item');									var id = $item.data('id');									var items = mainData.items;									if(id in items){										delete items[id];										$item.removeClass('position-item-selected');									}else{										items[id] = 1;										$item.addClass('position-item-selected');									}									$.observable(mainData).setProperty({										items : items,										hasItems: RenderUtils.hasItems(items)									});								},								invite: function(){									var ids = [];									for(var i in mainData.items)										ids.push(i);									if(ids.length){										window.location.replace(root + '/sets/page/mergeInvite/' + ids.join('+') + '/');									}								}							});					new MainController({						el : $('#main')					});				});	})(jQuery);});